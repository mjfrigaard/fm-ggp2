# Frequency polygons {#sec-freq-poly}


```{r}
#| label: setup
#| message: false
#| warning: false
#| include: false
library(tidyverse)
library(lubridate)
library(scales)
library(knitr)
library(kableExtra)
library(colorblindr)
library(downlit)
# fonts ----
library(extrafont)
library(sysfonts)
source("_common.R")
# use font
showtext::showtext_auto()
# set theme
ggplot2::theme_set(theme_ggp2g(
    base_size = 15))
```


:::: {.callout-note collapse="false" icon=false}

::: {style="font-size: 1.10em; color: #02577A;"}
**Frequency polygons require:**
:::

::: {style="font-size: 1.05em; color: #282b2d;"}
**`r emo::ji("check")` a numeric (continuous) variable**
:::

<br>

```{r}
#| label: full_code_display
#| eval: true
#| echo: false
#| warning: false
#| message: false
#| out-height: '60%'
#| out-width: '60%'
#| fig-align: right
library(palmerpenguins) 
library(ggplot2)
penguins <- palmerpenguins::penguins
labs_freqpoly <- labs(
  title = "Adult foraging penguins",
  subtitle = "Distribution of flipper length",
  x = "Flipper length (millimeters)")
ggp2_freqpoly <- ggplot(data = penguins,
      aes(x = flipper_length_mm)) + 
    geom_freqpoly()
ggp2_freqpoly + 
  labs_freqpoly
```

::::

## Description 

A frequency polygon is a plot that displays data distributions using points connected by straight lines. It's similar to a histogram but is more commonly used to compare data across multiple sets. A legend is often included to differentiate between various data sets. Frequency polygons are used to [symmetry](https://en.wikipedia.org/wiki/Normal_distribution) and [skewness.](https://en.wikipedia.org/wiki/Skewness).

## Set up

::: {style="font-size: 1.10em; color: #1e83c8;"}
**PACKAGES:**
:::

::: {style="font-size: 0.95rem;"}
Install packages.
:::

::: {style="font-size: 0.85em;"}
```{r}
#| label: pkg_code_freq_poly
#| code-fold: false
#| eval: true
#| echo: true
#| warning: false
#| message: false
#| results: hide
install.packages("palmerpenguins")
library(palmerpenguins) 
library(ggplot2)
```
:::



::: {style="font-size: 1.10em; color: #1e83c8;"}
**DATA:**
:::

::: {.column-margin}
![Artwork by Allison Horst](www/lter_penguins.png){fig-align="right" width="100%" height="100%"}
:::

::: {style="font-size: 0.95rem;"}
The `penguins` data
:::

::: {style="font-size: 0.85em;"}
```{r}
#| label: data_code_freq_poly
#| code-fold: false
#| eval: true
#| echo: true
penguins <- palmerpenguins::penguins
glimpse(penguins)
```
:::


## Grammar

::: {style="font-size: 1.10em; color: #1e83c8;"}
**CODE:**
:::

::: {style="font-size: 0.95rem;"}

Create labels with `labs()`

Initialize the graph with `ggplot()` and provide `data`

Map `flipper_length_mm` to the `x` axis

Add the `geom_freqpoly()` layer

:::

::: {style="font-size: 0.85em;"}
```{r}
#| label: code_graph_freq_poly
#| code-fold: false
#| eval: false
#| echo: true 
#| warning: false
#| message: false
labs_freqpoly <- labs(
  title = "Adult foraging penguins",
  subtitle = "Distribution of flipper length",
  x = "Flipper length (millimeters)")
ggp2_freqpoly <- ggplot(data = penguins,
      aes(x = flipper_length_mm)) + 
    geom_freqpoly()
ggp2_freqpoly + 
  labs_freqpoly
```
:::



::: {style="font-size: 1.10em; color: #1e83c8;"}
**GRAPH:**
:::

```{r}
#| label: create_graph_freq_poly
#| eval: true
#| echo: false
#| warning: false
#| message: false
#| layout-nrow: 1
#| column: page-inset-right
labs_freqpoly <- labs(
  title = "Adult foraging penguins",
  subtitle = "Distribution of flipper length",
  x = "Flipper length (millimeters)")
ggp2_freqpoly <- ggplot(data = penguins,
      aes(x = flipper_length_mm)) + 
    geom_freqpoly()
ggp2_freqpoly + 
  labs_freqpoly
```

::: {style="font-size: 0.95rem;"}
Experiment to see how many `bins` fit your variableâ€™s distribution
:::

