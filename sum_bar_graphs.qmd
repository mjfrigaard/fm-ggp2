# Summary bar graphs {#sec-sum-bar-graphs}

```{r}
#| label: setup
#| message: false
#| warning: false
#| include: false
library(tidyverse)
library(lubridate)
library(scales)
library(knitr)
library(kableExtra)
library(colorblindr)
library(downlit)
# fonts ----
library(extrafont)
library(sysfonts)
source("_common.R")
# use font
showtext::showtext_auto()
# set theme
ggplot2::theme_set(theme_ggp2g(
    base_size = 15))
```

:::: {.callout-note collapse="false" icon=false}

<br>

::: {style="font-size: 1.10em; color: #02577A;"}
**This graph requires:**
:::


::: {style="font-size: 1.05em; color: #282b2d;"}
**`r emo::ji("check")` a numeric (continuous) variable**

**`r emo::ji("check")` a categorical variable** 
:::

```{r}
#| label: full_code_display
#| eval: true
#| echo: false
#| warning: false
#| message: false
#| out-height: '60%'
#| out-width: '60%'
#| fig-align: right
peng_sum_col <- palmerpenguins::penguins |> 
    dplyr::select(body_mass_g, island) |> 
    tidyr::drop_na() |> 
    # divide the mass value by 1000
    dplyr::mutate(
        body_mass_kg = body_mass_g / 1000
    ) |> 
    dplyr::group_by(island) |> 
    dplyr::summarise(
      avg_bmi_kg = mean(body_mass_kg)
    ) |> 
    dplyr::ungroup()
labs_sum_col <- labs(
    title = "Average Penguin Body Mass",
    subtitle = "What is the average penguin BMI per Island?",
    x = "Island",
    y = "Average Penguin Body Mass (kg)")
ggp2_sum_col <- ggplot(data = peng_sum_col,
    aes(x = island,
        y = avg_bmi_kg)) +
    geom_col(aes(fill = island), 
        show.legend = FALSE)  
ggp2_sum_col + 
    labs_sum_col
```

::::

## Description

Bar graphs can summarize data by showing a statistic for each category. The x-axis lists the categories, and the y-axis shows the values. They can include error bars to show variation or confidence intervals.

In `ggplot2`, we can create summary bar graphs with `geom_bar()`.

## Set up

::: {style="font-size: 1.10em; color: #1e83c8;"}
**PACKAGES:**
:::

Install packages.


::: {style="font-size: 0.85em;"}
```{r}
#| label: pkg_code_sum_col
#| code-fold: show
#| eval: false
#| echo: true
#| warning: false
#| message: false
#| results: hide
install.packages("palmerpenguins")
library(palmerpenguins) 
library(ggplot2)
```
:::



::: {style="font-size: 1.10em; color: #1e83c8;"}
**DATA:**
:::

::: {.column-margin}
![Artwork by Allison Horst](www/lter_penguins.png){fig-align="right" width="100%" height="100%"}
:::


Remove the missing values from `body_mass_g` and `island` in the `palmerpenguins::penguins` data and convert body mass in grams to kilograms (`body_mass_kg`).

*We'll also reduce the number of columns in the `penguins` data for clarity.*

::: {style="font-size: 0.85em;"}
```{r}
#| label: data_code_sum_col
#| code-fold: show
#| eval: true
#| echo: true
peng_sum_col <- palmerpenguins::penguins |> 
    dplyr::select(body_mass_g, island) |> 
    tidyr::drop_na() |> 
    # divide the mass value by 1000
    dplyr::mutate(
        body_mass_kg = body_mass_g / 1000
    ) |> 
    dplyr::group_by(island) |> 
    dplyr::summarise(
      avg_bmi_kg = mean(body_mass_kg)
    ) |> 
    dplyr::ungroup()
dplyr::glimpse(peng_sum_col)
```
:::


## Grammar

::: {style="font-size: 1.10em; color: #1e83c8;"}
**CODE:**
:::

  -   Create labels with `labs()`

  -   Initialize the graph with `ggplot()` and provide `data`

  -   Map `island` to `x` and `avg_bmi_kg` to `y`

  -   *Inside* the `aes()` of `geom_col()`, map `island` to `fill` 

  -   *Outside* the `aes()` of `geom_col()`, remove the legend with `show.legend = FALSE`

::: {style="font-size: 0.85em;"}
```{r}
#| label: code_graph_sum_col
#| code-fold: show
#| eval: false
#| echo: true 
#| warning: false
#| message: false
#| out-height: '100%'
#| out-width: '100%'
labs_sum_col <- labs(
    title = "Average Penguin Body Mass",
    subtitle = "What is the average penguin BMI per Island?",
    x = "Island",
    y = "Average Penguin Body Mass (kg)")
ggp2_sum_col <- ggplot(data = peng_sum_col,
    aes(x = island,
        y = avg_bmi_kg)) +
    geom_col(aes(fill = island), 
        show.legend = FALSE)  
ggp2_sum_col + 
    labs_sum_col
```
:::



::: {style="font-size: 1.10em; color: #1e83c8;"}
**GRAPH:**
:::

```{r}
#| label: create_graph_sum_col
#| eval: true
#| echo: false
#| warning: false
#| message: false
#| out-height: '100%'
#| out-width: '100%'
#| layout-nrow: 1
#| column: page-inset-right
labs_sum_col <- labs(
    title = "Average Penguin Body Mass",
    subtitle = "What is the average penguin BMI per Island?",
    x = "Island",
    y = "Average Penguin Body Mass (kg)")
ggp2_sum_col <- ggplot(data = peng_sum_col,
    aes(x = island,
        y = avg_bmi_kg)) +
    geom_col(aes(fill = island), 
        show.legend = FALSE)  
ggp2_sum_col + 
    labs_sum_col
```


## More Info

Below is more information on `geom_bar()` vs. `geom_col()`.

### Identity vs. Count

  -   The `geom_bar()` geom will also create grouped bar graphs, but we have to switch the `stat` argument to `"identity"`.

::: {style="font-size: 0.85em;"}
```{r}
#| label: show_stat_sum_col
#| eval: true
#| echo: true
#| warning: false
#| message: false
#| out-height: '100%'
#| out-width: '100%'
#| layout-nrow: 1
#| column: page-inset-right
ggplot(data = peng_sum_col,
    aes(x = island,
        y = avg_bmi_kg)) +
    geom_col(aes(fill = island), 
        show.legend = FALSE,
        stat = "identity")  +
    labs_sum_col
```
:::


### `geom_bar()` vs. `geom_col()`

<br>

  -   `geom_bar()` will map a categorical variable to the `x` *or* `y` and display counts for the discrete levels (see [`stat_count()`](https://ggplot2.tidyverse.org/reference/geom_bar.html) for more info)


  -   `geom_col()` will map *both* `x` *and* `y` aesthetics, and is used when we want to display numerical (quantitative) values across the levels of a categorical variable. `geom_col()` assumes these values have been created in their own column (see  [`stat_identity()`](https://ggplot2.tidyverse.org/reference/stat_identity.html) for more info)
