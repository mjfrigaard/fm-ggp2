{"title":"Density contours","markdown":{"headingText":"Density contours","headingAttr":{"id":"sec-density-contours","classes":[],"keyvalue":[]},"containsRefs":false,"markdown":"\n```{r}\n#| label: setup\n#| message: false\n#| warning: false\n#| include: false\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(knitr)\nlibrary(kableExtra)\nlibrary(colorblindr)\nlibrary(downlit)\n# fonts ----\nlibrary(extrafont)\nlibrary(sysfonts)\nsource(\"_common.R\")\n# use font\nshowtext::showtext_auto()\n# set theme\nggplot2::theme_set(theme_ggp2g(\n    base_size = 13))\ninstall.packages(\"fivethirtyeight\")\n```\n\n```{r}\n#| label: status\n#| results: \"asis\"\n#| echo: false\n# status ----\n# polish, dev, draft, complete\nstatus(\"complete\")\n```\n\n\n\n:::: {.callout-note collapse=\"false\" icon=false}\n\n<br>\n\n```{r}\n#| label: full_code_display\n#| eval: true\n#| echo: false\n#| warning: false\n#| message: false\n#| out-height: '60%'\n#| out-width: '60%'\n#| fig-align: right\nlibrary(palmerpenguins)\nlibrary(ggplot2)\npeng_dnsty_2d <- palmerpenguins::penguins |>\n  filter(!is.na(bill_length_mm) &\n    !is.na(flipper_length_mm) &\n    !is.na(species)) |>\n  mutate(species = factor(species))\n# x limits\nx_min <- min(peng_dnsty_2d$bill_length_mm) - 5\nx_max <- max(peng_dnsty_2d$bill_length_mm) + 5\n# y limits\ny_min <- min(peng_dnsty_2d$flipper_length_mm) - 10\ny_max <- max(peng_dnsty_2d$flipper_length_mm) + 10\nlabs_dnsty_2d <- labs(\n  title = \"Bill Length vs. Flipper Length\",\n  x = \"Bill Length (mm)\",\n  y = \"Flipper length (mm)\"\n)\nggp2_dnsty_2d_fill <- ggplot(\n  data = peng_dnsty_2d,\n  mapping = aes(\n    x = bill_length_mm,\n    fill = after_stat(level),\n    y = flipper_length_mm\n  )\n) +\n  # expand limits\n  expand_limits(\n    x = c(x_min, x_max),\n    y = c(y_min, y_max)\n  ) +\n  # stat polygon\n  stat_density_2d(\n    geom = \"polygon\",\n    color = \"#000000\",\n    linewidth = 0.15\n  ) +\n  # gradient\n  scale_fill_gradient(\n    low = \"#02577A\",\n    high = \"#ffffff\",\n    guide = \"none\"\n  )\nggp2_dnsty_2d_fill +\n  labs_dnsty_2d\n```\n\n::: {style=\"font-size: 1.10em; color: #02577A;\"}\n**This graph requires:**\n:::\n\n::: {style=\"font-size: 1.05em; color: #282b2d;\"}\n**`r emo::ji(\"check\")` a categorical variable**      \n:::\n\n::: {style=\"font-size: 1.05em; color: #282b2d;\"}\n**`r emo::ji(\"check\")` two numeric (continuous) variables**\n:::\n\n::::\n\n## Description\n\nDensity contours (or 2-D density plots) are helpful for displaying differences in values between two numeric (continuous) variables. \n\nIn [topographical maps](https://en.wikipedia.org/wiki/Topography), contour lines are drawn around areas of equal elevation above sea-level. In density contours, the contour lines are drawn around the areas our data occupy (essentially replacing sea-level as '*an area without any x or y values.*')\n\nSpecifically, the contour lines outline areas on the graph with differing point densities, and semi-transparent colors (gradient) can be added to further highlight the separate regions.\n\n## Set up\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**PACKAGES:**\n:::\n\nInstall packages.\n\n\n::: {style=\"font-size: 0.85em;\"}\n```{r}\n#| label: pkg_code_geom_density_2d\n#| code-fold: show\n#| eval: false\n#| echo: true\n#| warning: false\n#| message: false\n#| results: hide\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n```\n:::\n\n\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**DATA:**\n:::\n\n::: {.column-margin}\n![Artwork by allison horst](www/lter_penguins.png){fig-align=\"right\" width=\"100%\" height=\"100%\"}\n:::\n\nWe'll use the `penguins` data from the `palmerpenguins` package, but remove the missing values from `bill_length_mm`, `flipper_length_mm`, and `species`.\n\n::: {style=\"font-size: 0.85em;\"}\n```{r}\n#| label: data_code_geom_density_2d\n#| code-fold: show\n#| eval: true\n#| echo: true\npeng_dnsty_2d <- palmerpenguins::penguins |>\n  dplyr::filter(!is.na(bill_length_mm) &\n    !is.na(flipper_length_mm) &\n    !is.na(species)) |>\n  dplyr::mutate(species = factor(species))\nglimpse(peng_dnsty_2d)\n```\n:::\n\n## Grammar\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**CODE:**\n:::\n\n  - Create labels with `labs()`\n\n  - Initialize the graph with `ggplot()` and provide `data`\n\n  - Create two values for extending the range of the `x` and `y` axis (`x_min`/`x_max` and `y_min`/`y_max`) \n\n  - Map `bill_length_mm` to `x` and `flipper_length_mm` to `y`\n\n  - Add the `expand_limits()` function, assigning our stored values to `x` and `y`\n\n  - Add the `geom_density_2d()` \n\n::: {style=\"font-size: 0.85em;\"}\n```{r}\n#| label: code_graph_geom_density_2d\n#| eval: false\n#| code-fold: show\n#| echo: true\n#| warning: false\n#| message: false\n#| out-height: '100%'\n#| out-width: '100%'\n# labels\nlabs_dnsty_2d <- labs(\n  title = \"Bill Length vs. Flipper Length\",\n  x = \"Bill Length (mm)\",\n  y = \"Flipper length (mm)\"\n)\n\n# x limits\nx_min <- min(peng_dnsty_2d$bill_length_mm) - 5\nx_max <- max(peng_dnsty_2d$bill_length_mm) + 5\n# y limits\ny_min <- min(peng_dnsty_2d$flipper_length_mm) - 10\ny_max <- max(peng_dnsty_2d$flipper_length_mm) + 10\n\nggp2_dnsty_2d <- ggplot(\n  data = peng_dnsty_2d,\n  mapping = aes(\n    x = bill_length_mm,\n    y = flipper_length_mm\n  )\n) +\n  # use our stored values\n  expand_limits(\n    x = c(x_min, x_max),\n    y = c(y_min, y_max)\n  ) +\n  geom_density_2d()\n# plot\nggp2_dnsty_2d +\n  labs_dnsty_2d\n```\n:::\n\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**GRAPH:**\n:::\n\n```{r}\n#| label: create_graph_geom_density_2d\n#| eval: true\n#| echo: false\n#| warning: false\n#| message: false\n#| out-height: '100%'\n#| out-width: '100%'\n#| layout-nrow: 1\n#| column: page-inset-right\n# x limits\nx_min <- min(peng_dnsty_2d$bill_length_mm) - 5\nx_max <- max(peng_dnsty_2d$bill_length_mm) + 5\n# y limits\ny_min <- min(peng_dnsty_2d$flipper_length_mm) - 10\ny_max <- max(peng_dnsty_2d$flipper_length_mm) + 10\n\n# labels\nlabs_dnsty_2d <- labs(\n  title = \"Bill Length vs. Flipper Length\",\n  x = \"Bill Length (mm)\",\n  y = \"Flipper length (mm)\"\n)\n\nggp2_dnsty_2d <- ggplot(\n  data = peng_dnsty_2d,\n  mapping = aes(\n    x = bill_length_mm,\n    y = flipper_length_mm\n  )\n) +\n  # use our stored values\n  expand_limits(\n    x = c(x_min, x_max),\n    y = c(y_min, y_max)\n  ) +\n  geom_density_2d()\n# plot\nggp2_dnsty_2d +\n  labs_dnsty_2d\n```\n\n## More info\n\nWe're going to break down how to create the density contour layer-by-layer using the `stat_density_2d()` function (which allows us to access some of the inner-workings of `geom_density_2d()`)\n\n### Base\n\n  - Create a new set of labels\n\n  - Initialize the graph with `ggplot()` and provide `data`\n\n  - Build a base layer: \n\n    - Map `bill_length_mm` to `x` and `flipper_length_mm` to `y`  \n\n    - Expand the `x` and `y` values with `expand_limits()` (using the values we created above)\n\n\n::: {style=\"font-size: 0.85em;\"}\n```{r}\n#| label: code_graph_base_layer\n#| eval: true\n#| echo: true\n#| warning: false\n#| message: false\n#| out-height: '100%'\n#| out-width: '100%'\n#| layout-nrow: 1\n#| column: page-inset-right\nlabs_sdens_2d <- labs(\n  title = \"Bill Length vs. Flipper Length\",\n  x = \"Bill Length (mm)\",\n  y = \"Flipper length (mm)\",\n  color = \"Species\"\n)\n# base\nbase_sdens_2d <- ggplot(\n  data = peng_dnsty_2d,\n  mapping = aes(\n    x = bill_length_mm,\n    y = flipper_length_mm\n  )\n) +\n  expand_limits(\n    x = c(x_min, x_max),\n    y = c(y_min, y_max)\n  )\nbase_sdens_2d +\n  labs_sdens_2d\n```\n:::\n\n### Stat\n\nAdd the `stat_density_2d()` layer:\n\n- *Inside* `aes()`, use [`after_stat()`](https://ggplot2.tidyverse.org/reference/aes_eval.html) to map `level` to `fill` (from Help, \"*Evaluation after stat transformation will have access to the variables calculated by the stat, not the original mapped values.*\")\n\n- Set the `geom` to `\"polygon\"`\n\n- Change the `color` to black (`#000000`)\n\n- adjust the `linewidth` to `0.35`\n\n\n::: {style=\"font-size: 0.85em;\"}\n```{r}\n#| label: code_graph_stat_layer\n#| eval: true\n#| echo: true\n#| warning: false\n#| message: false\n#| out-height: '100%'\n#| out-width: '100%'\n#| layout-nrow: 1\n#| column: page-inset-right\nstat_sdens_2d <- base_sdens_2d +\n  stat_density_2d(\n    aes(fill = after_stat(level)),\n    geom = \"polygon\",\n    color = \"#000000\",\n    linewidth = 0.35\n  )\nstat_sdens_2d +\n  labs_sdens_2d\n```\n\n```{r}\n#| label: code_graph_stat_layer_pw\n#| eval: true\n#| echo: false\n#| warning: false\n#| message: false\n#| out-height: '100%'\n#| out-width: '100%'\n#| layout-nrow: 1\n#| column: page-inset-right\nggp1 <- stat_sdens_2d +\n  labs(\n    x = \"Bill Length (mm)\",\n    y = \"Flipper length (mm)\"\n  ) +\n  theme(\n    axis.title = element_text(size = 8),\n    axis.text = element_text(size = 6),\n    legend.text = element_text(size = 7),\n    legend.title = element_text(size = 9, face = \"bold\")\n  )\n```\n\n:::\n\n### Fill\n\n***Where did levels come from?***\n\n*You probably noticed the `stat_density_2d()` produced a legend with `level`, and a series of values for the color gradient. These numbers are difficult to interpret directly, but you can think of them as 'elevation changes' in point density. Read more [here on SO.](https://stackoverflow.com/questions/53172200/stat-density2d-what-does-the-legend-mean)*\n\nNow that we have a color gradient for our contour lines, we can adjust it's the range of colors using  `scale_fill_gradient()`\n\n- `low` is the color for the low values of `level`    \n\n- `high` is the color for the high values of `level`   \n\n- `guide` let's us control the `legend`    \n\nWe'll set these to white (`\"#ffffff\"`) and dark gray (`\"#404040\"`)\n\n::: {style=\"font-size: 0.85em;\"}\n```{r}\n#| label: code_graph_fill_layer\n#| eval: false\n#| echo: true\n#| warning: false\n#| message: false\n#| out-height: '100%'\n#| out-width: '100%'\n#| layout-nrow: 1\n#| column: page-inset-right\nfill_sdens_2d <- stat_sdens_2d +\n  scale_fill_gradient(\n    low = \"#ffffff\",\n    high = \"#404040\",\n    guide = \"legend\"\n  )\nfill_sdens_2d +\n  labs_sdens_2d\n```\n\n```{r}\n#| label: code_graph_fill_layer_pw\n#| eval: true\n#| echo: false\n#| warning: false\n#| message: false\n#| out-height: '100%'\n#| out-width: '100%'\n#| layout-nrow: 1\n#| column: page-inset-right\nfill_sdens_2d <- stat_sdens_2d +\n  scale_fill_gradient(\n    low = \"#ffffff\",\n    high = \"#404040\",\n    guide = \"legend\"\n  )\nfill_sdens_2d +\n  labs_sdens_2d\n```\n\n:::\n\n### Points\n\nThe dark areas in the contour lines are the areas with higher value density, but why don't we test that by adding some data points? \n\n  - Add a `geom_point()` layer\n\n    - *Inside* `aes()`, map `species` to `color` (this will tell us if the three dark areas represent differences in the three species in the dataset)\n\n    - Set `size` to `2`  \n\n    - Change the `alpha` to `2/3`\n\n\n::: {style=\"font-size: 0.85em;\"}\n```{r}\n#| label: code_graph_points_layer\n#| eval: false\n#| echo: true\n#| warning: false\n#| message: false\n#| out-height: '100%'\n#| out-width: '100%'\n#| layout-nrow: 1\n#| column: page-inset-right\n# geom_point()\npnts_sdens_2d <- fill_sdens_2d +\n  geom_point(aes(color = species),\n    size = 2,\n    alpha = 2 / 3\n  )\n# final\npnts_sdens_2d +\n  labs_sdens_2d\n```\n:::\n\n::: {style=\"font-size: 0.85em;\"}\n```{r}\n#| label: code_graph_points_layer_pw\n#| eval: true\n#| echo: false\n#| warning: false\n#| message: false\n#| out-height: '100%'\n#| out-width: '100%'\n#| layout-nrow: 1\n#| column: page-inset-right\npnts_sdens_2d <- fill_sdens_2d +\n  geom_point(aes(color = species),\n    size = 2,\n    alpha = 2 / 3)\npnts_sdens_2d +\n  labs_sdens_2d\n```\n:::\n\n## Even more info\n\nIn the previous plot, we used the `species` variable in the `geom_point()` layer to identify the points using color. In the section below, we'll show more methods of displaying groups with density contour lines. \n\n### Groups\n\nRe-create the labels \n\nInitialize the graph with `ggplot()` and provide `data`\n\nBuild a `geom_density_2d()` layer:   \n\n  - Map `bill_length_mm` to `x` and `flipper_length_mm` to `y`  \n  \n  - Expand the limits using our adjusted min/max `x` and `y` values \n  \n  - Add the `geom_density_2d()`, mapping `species` to `color`  \n\nBuild the `geom_point()` layer:  \n\n  - Map `species` to `color` \n  \n  - set the `alpha` and remove the `legend` \n\n::: {style=\"font-size: 0.85em;\"}\n```{r}\n#| label: code_graph_points\n#| eval: true\n#| echo: true\n#| warning: false\n#| message: false\n#| out-height: '100%'\n#| out-width: '100%'\n#| layout-nrow: 1\n#| column: page-inset-right\nlabs_dnsty_2d_grp <- labs(\n  title = \"Bill Length vs. Flipper Length\",\n  x = \"Bill Length (mm)\",\n  y = \"Flipper length (mm)\",\n  color = \"Species\"\n)\n\nggp2_dnsty_2d_grp <- ggplot(\n  data = peng_dnsty_2d,\n  mapping = aes(\n    x = bill_length_mm,\n    y = flipper_length_mm\n  )\n) +\n  expand_limits(\n    x = c(x_min, x_max),\n    y = c(y_min, y_max)\n  ) +\n  geom_density_2d(aes(color = species))\n\n\nggp2_dnsty_2d_pnts <- ggp2_dnsty_2d_grp +\n  geom_point(aes(color = species),\n    alpha = 2 / 3,\n    show.legend = FALSE\n  )\n\nggp2_dnsty_2d_pnts +\n  labs_dnsty_2d_grp\n```\n:::\n\n### Facets\n\n  - Re-create the labels\n\n  - Initialize the graph with `ggplot()` and provide `data`\n\n  - Build the base/limits: \n\n    - Map `bill_length_mm` to `x` and `flipper_length_mm` to `y`  \n  \n    - Expand the limits using our adjusted min/max `x` and `y` values \n\n  - Build the `geom_density_2d_filled()` layer: \n\n    - Add the `geom_density_2d_filled()`, setting `linewidth` to `0.30` and `contour_var` to `\"ndensity\"`\n  \n  - Add the `scale_discrete_manual()`:\n\n    - Set `aesthetics` to `\"fill\"`  \n  \n    - Provide a set of color `values` (this plot needed 10 values, and I grabbed them all from [color-hex](https://www.color-hex.com/).\n  \n  - Facet: \n\n    - Add `facet_wrap()`, and place `species` in the [`vars()`](https://ggplot2.tidyverse.org/reference/vars.html)\n\n::: {style=\"font-size: 0.85em;\"}\n```{r}\n#| label: code_graph_facets\n#| eval: false\n#| echo: true\n#| warning: false\n#| message: false\n#| out-height: '100%'\n#| out-width: '100%'\n#| layout-nrow: 1\n#| column: page-inset-right\nlabs_dnsty_2d_facet <- labs(\n  title = \"Bill Length vs. Flipper Length\",\n  subtitle = \"By Species\",\n  x = \"Bill Length (mm)\",\n  y = \"Flipper length (mm)\"\n)\nggp2_dnsty_2d_facet <- ggplot(\n  data = peng_dnsty_2d,\n  mapping = aes(\n    x = bill_length_mm,\n    y = flipper_length_mm\n  )\n) +\n  expand_limits(\n    x = c(x_min, x_max),\n    y = c(y_min, y_max)\n  ) +\n  geom_density_2d_filled(\n    linewidth = 0.30,\n    contour_var = \"ndensity\"\n  ) +\n  scale_discrete_manual(\n    aesthetics = \"fill\",\n    values = c(\n      \"#18507a\", \"#2986cc\", \"#3e92d1\", \"#539ed6\", \"#69aadb\",\n      \"#7eb6e0\", \"#a9ceea\", \"#bedaef\", \"#d4e6f4\", \"#e9f2f9\"\n    )\n  ) +\n  facet_wrap(vars(species))\n\nggp2_dnsty_2d_facet +\n  labs_dnsty_2d_facet\n```\n\n```{r}\n#| label: code_graph_facets_run\n#| eval: true\n#| echo: false\n#| warning: false\n#| message: false\n#| out-height: '100%'\n#| out-width: '100%'\n#| layout-nrow: 1\n#| column: page-inset-right\nlabs_dnsty_2d_facet <- labs(\n  title = \"Bill Length vs. Flipper Length\",\n  subtitle = \"By Species\",\n  x = \"Bill Length (mm)\",\n  y = \"Flipper length (mm)\"\n)\n\nggp2_dnsty_2d_facet <- ggplot(\n  data = peng_dnsty_2d,\n  mapping = aes(\n    x = bill_length_mm,\n    y = flipper_length_mm\n  )\n) +\n  expand_limits(\n    x = c(x_min, x_max),\n    y = c(y_min, y_max)\n  ) +\n  geom_density_2d_filled(\n    linewidth = 0.30,\n    contour_var = \"ndensity\"\n  ) +\n  scale_discrete_manual(\n    aesthetics = \"fill\",\n    values = c(\n      \"#18507a\", \"#2986cc\", \"#3e92d1\", \"#539ed6\", \"#69aadb\",\n      \"#7eb6e0\", \"#a9ceea\", \"#bedaef\", \"#d4e6f4\", \"#e9f2f9\"\n    )\n  ) +\n  facet_wrap(vars(species))\n\nggp2_dnsty_2d_facet +\n  labs_dnsty_2d_facet +\n  theme(\n    axis.title = element_text(size = 9),\n    axis.text = element_text(size = 7),\n    legend.position = \"bottom\",\n    legend.text = element_text(size = 7),\n    legend.title = element_text(\n      size = 8,\n      face = \"bold\"\n    )\n  )\n```\n\n:::\n\n\n### Fill \n\nIn the previous section, we defined the color values used in `geom_density_2d_filled()` with `scale_discrete_manual()`. Below we give an example using the default colors: \n\n  - Re-create the labels\n\n  - Initialize the graph with `ggplot()` and provide `data`\n\n  - Build the base/limits: \n\n    - Map `bill_length_mm` to `x` and `flipper_length_mm` to `y`  \n  \n    - Expand the limits using our adjusted min/max `x` and `y` values\n\n  - Add the `geom_density_2d()` layer\n\n  - Add the `geom_density_2d_filled()`, setting `alpha` to `0.8`\n\n::: {style=\"font-size: 0.85em;\"}\n```{r}\n#| label: code_graph_fill\n#| eval: false\n#| echo: true\n#| warning: false\n#| message: false\n#| out-height: '100%'\n#| out-width: '100%'\n#| layout-nrow: 1\n#| column: page-inset-right\nlabs_dnsty_2d <- labs(\n  title = \"Bill Length vs. Flipper Length\",\n  x = \"Bill Length (mm)\",\n  y = \"Flipper length (mm)\"\n)\n\nggp2_dnsty_2d <- ggplot(\n  data = peng_dnsty_2d,\n  mapping = aes(\n    x = bill_length_mm,\n    y = flipper_length_mm\n  )\n) +\n  # use our stored values\n  expand_limits(\n    x = c(x_min, x_max),\n    y = c(y_min, y_max)\n  ) +\n  geom_density_2d()\n\nggp2_dnsty_2d_fill <- ggp2_dnsty_2d +\n  geom_density_2d_filled(alpha = 0.8)\n\nggp2_dnsty_2d_fill +\n  labs_dnsty_2d\n```\n\n```{r}\n#| label: code_graph_fill_run\n#| eval: true\n#| echo: false\n#| warning: false\n#| message: false\n#| out-height: '100%'\n#| out-width: '100%'\n#| layout-nrow: 1\n#| column: page-inset-right\nlabs_dnsty_2d <- labs(\n  title = \"Bill Length vs. Flipper Length\",\n  x = \"Bill Length (mm)\",\n  y = \"Flipper length (mm)\"\n)\n\nggp2_dnsty_2d <- ggplot(\n  data = peng_dnsty_2d,\n  mapping = aes(\n    x = bill_length_mm,\n    y = flipper_length_mm\n  )\n) +\n  # use our stored values\n  expand_limits(\n    x = c(x_min, x_max),\n    y = c(y_min, y_max)\n  ) +\n  geom_density_2d()\n\nggp2_dnsty_2d_fill <- ggp2_dnsty_2d +\n  geom_density_2d_filled(alpha = 0.8)\n\nggp2_dnsty_2d_fill +\n  labs_dnsty_2d +\n  theme(\n    axis.title = element_text(size = 11),\n    axis.text = element_text(size = 10),\n    legend.text = element_text(size = 6),\n    legend.title = element_text(\n      size = 9,\n      face = \"bold\"\n    )\n  )\n```\n:::\n\n### Lines\n\nWe can also outline the contours by adding color to the lines using another `geom_density_2d()` layer: \n\n  - Set `linewidth` to `0.30`\n  \n  - Set `color` to `\"#ffffff\"`\n\n::: {style=\"font-size: 0.85em;\"}\n```{r}\n#| label: code_graph_lines\n#| eval: false\n#| echo: true\n#| warning: false\n#| message: false\n#| out-height: '100%'\n#| out-width: '100%'\n#| layout-nrow: 1\n#| column: page-inset-right\nggp2_dnsty_2d_fill_lns <- ggp2_dnsty_2d_fill +\n  geom_density_2d(\n    linewidth = 0.30,\n    color = \"#ffffff\"\n  )\nggp2_dnsty_2d_fill_lns +\n  labs_dnsty_2d\n```\n\n```{r}\n#| label: code_graph_lines_run\n#| eval: true\n#| echo: false\n#| warning: false\n#| message: false\n#| out-height: '100%'\n#| out-width: '100%'\n#| layout-nrow: 1\n#| column: page-inset-right\nggp2_dnsty_2d_fill_lns <- ggp2_dnsty_2d_fill +\n  geom_density_2d(\n    linewidth = 0.30,\n    color = \"#ffffff\"\n  )\nggp2_dnsty_2d_fill_lns +\n  labs_dnsty_2d +\n  theme(\n    axis.title = element_text(size = 11),\n    axis.text = element_text(size = 10),\n    legend.text = element_text(size = 6),\n    legend.title = element_text(\n      size = 9,\n      face = \"bold\"\n    )\n  )\n```\n\n:::\n\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"fig-asp":0.618,"df-print":"paged","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"show","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","highlight-style":"arrow","toc":true,"toc-depth":5,"number-sections":true,"dpi":320,"output-file":"density_contours.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.28","theme":["flatly","custom.scss"],"toc-location":"right","toc-expand":3,"toc-title":"Contents","code-block-bg":"#f8f8f8","code-block-border-left":"#99bbc9","code-annotations":"hover","callout-appearance":"simple","code-summary":"show/hide","fontsize":"1.055em","linestretch":1.25},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}