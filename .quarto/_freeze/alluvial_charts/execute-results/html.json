{
  "hash": "fc9827fc5a83020acf29eb7ea58e8174",
  "result": {
    "markdown": "# Alluvial charts {.unnumbered}\n\n\n\n\n\n::: {.callout-tip appearance='simple' icon=false}\n***This graph is largely complete and just needs final proof reading.*** \n:::\n\n\n\n\n:::: {.callout-note collapse=\"false\" icon=false}\n## Graph info\n::: {style=\"font-size: 1.25em; color: #007bff;\"}\n**Should I use this graph?**\n:::\n\n<br>\n\n\n::: {.cell layout-align=\"right\"}\n::: {.cell-output-display}\n![](alluvial_charts_files/figure-html/full_code_display-1.png){fig-align='right' width=60% height=60%}\n:::\n:::\n\n\n::: {style=\"font-size: 1.10em; color: #007bff;\"}\n**This graph requires:**\n:::\n\n::: {style=\"font-size: 1.05em; color: #fa7b3c;\"}\n**✅ multiple categorical variables**     \n:::\n\n::: {style=\"font-size: 1.05em; color: #fa7b3c;\"}\n**✅ a date or time variable**    \n:::\n\n::::\n\n## Description \n\nAn alluvial graph displays the changes in composition or flow over time or across multiple categories. \n\nWe can build alluvial charts in `ggplot2` with the [`ggalluvial` package:](https://corybrunson.github.io/ggalluvial/). \n\nSee also: [parallel sets](https://mjfrigaard.github.io/ggp2-gallery/rela/parallel_sets.html)\n\n## Getting set up\n\n:::: {.panel-tabset}\n\n### Packages\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**PACKAGES:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nInstall packages.\n:::\n\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\n# pak::pak(\"corybrunson/ggalluvial\")\nlibrary(ggalluvial)\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n```\n:::\n\n:::\n\n### Data\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**DATA:**\n:::\n\n::: {.column-margin}\n![Artwork by allison horst](www/lter_penguins.png){fig-align=\"right\" width=\"100%\" height=\"100%\"}\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nBelow we create a wide example of the `penguins` data (as `peng_wide`)\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\npeng_wide <- penguins |> \n  tidyr::drop_na() |> \n  dplyr::count(year, island, sex, species) |> \n  dplyr::mutate(year = factor(year)) |> \n  dplyr::rename(freq = n)\ndplyr::glimpse(peng_wide)\n#> Rows: 30\n#> Columns: 5\n#> $ year    <fct> 2007, 2007, 2007, 2007, 2007, 2007, 2007, …\n#> $ island  <fct> Biscoe, Biscoe, Biscoe, Biscoe, Dream, Dre…\n#> $ sex     <fct> female, female, male, male, female, female…\n#> $ species <fct> Adelie, Gentoo, Adelie, Gentoo, Adelie, Ch…\n#> $ freq    <int> 5, 16, 5, 17, 9, 13, 10, 13, 8, 7, 9, 22, …\n```\n:::\n\n:::\n::::\n\n## The grammar\n\n:::: {.panel-tabset}\n\n### Code\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**CODE:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\n\nCreate labels with `labs()` (with `ggtitle()`, `ylab()`, and `labs()`)\n\nAdd `scale_x_discrete()` with the `limits` set to `\"Year\"`, `\"Island\"` and `\"Species\"`, and `expand` to `0.1` and `0.07`\n\nAdd `geom_alluvium()` with `fill` set to the `sex` variable and `geom_stratum()`\n\nAdd `geom_text()`, with `stat` set to `stratum` and label set to `after_stat(stratum)` (*inside* `aes()`) \n\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nlabs_alluvial <- ggtitle(label = \"Palmer Penguins\", \n    subtitle = \"Stratified by year, island and species\")\nlabs_alluvial_y <- ylab(\"Frequency\") \nlabs_alluvial_fill <- labs(fill = \"Sex\")\n\nggp2_alluvial_w <- ggplot(data = peng_wide,\n  aes(axis1 = year, axis2 = island,\n      axis3 = species, y = freq)) +\n  scale_x_discrete(\n    limits = c(\"Year\", \"Island\", \"Species\"),\n    expand = c(0.1, 0.07)) +\n  geom_alluvium(aes(fill = sex)) +\n  geom_stratum() +\n  geom_text(stat = \"stratum\", \n    aes(label = after_stat(stratum)),\n      size = 3)\n\nggp2_alluvial_w + \n  theme(legend.position = \"bottom\")\n  labs_alluvial + \n  labs_alluvial_y + \n  labs_alluvial_fill\n```\n:::\n\n:::\n\n### Graph\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**GRAPH:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nThe `ggalluvial` functions can handle wide or long data. \n:::\n\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n::: {.cell-output-display}\n![](alluvial_charts_files/figure-html/create_graph_alluvial-1.png){width=100% height=100%}\n:::\n:::\n\n\n::::\n\n## More info\n\nThe `ggalluvial` package can also help reshape data with the `to_lodes_form()` function.\n\n:::: {.panel-tabset}\n\n### `to_lodes_form()` \n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**to_lodes_form():**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nBelow we create `peng_lodes` from the `penguins` dataset using the `to_lodes_form()` from the `ggalluvial` package.\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell}\n\n```{.r .cell-code}\npeng_lodes <- penguins |> \n  dplyr::select(Year = year, Island = island, \n         Species = species, Sex = sex) |> \n  tidyr::drop_na() |> \n  dplyr::count(Year, Island, Species, Sex) |> \n  dplyr::mutate(Year = factor(Year)) |> \n  dplyr::rename(Freqency = n) |> \n  ggalluvial::to_lodes_form(key = \"Measure\", axes = 1:3) \nglimpse(peng_lodes)\n#> Rows: 90\n#> Columns: 5\n#> $ Sex      <fct> female, male, female, male, female, male,…\n#> $ Freqency <int> 5, 5, 16, 17, 9, 10, 13, 13, 8, 7, 9, 9, …\n#> $ alluvium <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13…\n#> $ Measure  <fct> Year, Year, Year, Year, Year, Year, Year,…\n#> $ stratum  <fct> 2007, 2007, 2007, 2007, 2007, 2007, 2007,…\n```\n:::\n\n:::\n\n::: {style=\"font-size: 0.85em;\"}\n\nCreate labels with `labs()`\n\nMap `Measure` to `x`, `Frequency` to `y`, `stratum` to `stratum`, `alluvium` to `alluvium`, and `label` to `stratum`.\n\nAdd the `geom_alluvium()` and map `Sex` to `fill`  \n\nAdd the `geom_stratum()` and set the `width` to `0.45`  \n\nAdd `geom_text()` and set `stat` to `\"stratum\"`\n\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nlabs_alluvial <- ggtitle(label = \"Palmer Penguins\", \n    subtitle = \"Stratified by year, island and species\")\n\nggp2_alluvial_lf <- ggplot(\n    data = peng_lodes,\n    aes(x = Measure,\n        y = Freqency,\n        stratum = stratum,\n        alluvium = alluvium,\n        label = stratum)) +\n    ggalluvial::geom_alluvium(aes(fill = Sex)) +\n    ggalluvial::geom_stratum(width = 0.45) +\n    geom_text(stat = \"stratum\", size = 2.5)\n\nggp2_alluvial_lf +\n    labs_alluvial +\n    theme_ggp2g(base_size = 13)\n```\n\n::: {.cell-output-display}\n![](alluvial_charts_files/figure-html/create_graph_alluvial_lf-1.png){width=100% height=100%}\n:::\n:::\n\n:::\n\n### `geom_flow()` \n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**geom_flow():**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nIf you'd like to arrange the date or time variable across the `x`, you can use the `ggalluvial::geom_flow()` with `ggalluvial::geom_stratum()`. \n\nFirst create `peng_alluvial`, a subset of `palmerpenguins::penguins_raw` with all variables turned to factors. \n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell}\n\n```{.r .cell-code}\npeng_alluvial <- palmerpenguins::penguins_raw |> \n  janitor::clean_names() |> \n  dplyr::mutate(year = lubridate::year(date_egg),\n         year = factor(year),\n         individual_id = factor(individual_id),\n         island = factor(island)) |> \n  dplyr::select(year, individual_id, island)\ndplyr::glimpse(peng_alluvial)\n#> Rows: 344\n#> Columns: 3\n#> $ year          <fct> 2007, 2007, 2007, 2007, 2007, 2007, …\n#> $ individual_id <fct> N1A1, N1A2, N2A1, N2A2, N3A1, N3A2, …\n#> $ island        <fct> Torgersen, Torgersen, Torgersen, Tor…\n```\n:::\n\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nCreate labels with `labs()`\n\nInitiate graph with `data`\n\nMap the `year` to the `x`, `island` to `stratum`, `individual_id` to `alluvium`, `island` to `fill`, and `island` to `label`.\n\nAdd `scale_fill_brewer()`, and set the `type` to `\"qual\"` and choose a `palette`\n\nAdd the `geom_flow()`, with `stat` set to `\"alluvium\"`, `lode.guidance` set to `\"frontback\"`, and `color` to `\"#A9A9A9\"`\n\nAdd `ggalluvial::geom_stratum()`\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code  code-fold=\"true\"}\n# labels\nlabs_alluvial <- labs(\n  title = \"Penguin measurements across three years\")\n# add geom_flow() \nggp2_alluvial_flow <- ggplot(data = peng_alluvial,\n  mapping = aes(x = year, stratum = island, \n    alluvium = individual_id, \n    fill = island, label = island)) +\n  scale_fill_brewer(type = \"qual\", palette = \"Pastel2\") +\n  geom_flow(stat = \"alluvium\",\n    lode.guidance = \"frontback\",\n    color = \"#A9A9A9\")\n\nggp2_alluvial_flow\n\n# add geom_stratum()\nggp2_alluvial_stratum <- ggp2_alluvial_flow +\n  geom_stratum() \nggp2_alluvial_stratum\n```\n\n::: {.cell-output-display}\n![](alluvial_charts_files/figure-html/ggp2_alluvial_flow-1.png){width=100% height=100%}\n:::\n\n::: {.cell-output-display}\n![](alluvial_charts_files/figure-html/ggp2_alluvial_flow-2.png){width=100% height=100%}\n:::\n:::\n\n:::\n\n### `legend.position`\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**legend.position:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nMove legend to bottom with `theme(legend.position = \"bottom\")`\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nggp2_alluvial_stratum + \n  labs_alluvial + \n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](alluvial_charts_files/figure-html/ggp2_alluvial_legend_position-1.png){width=100% height=100%}\n:::\n:::\n\n:::\n\n::::\n",
    "supporting": [
      "alluvial_charts_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}