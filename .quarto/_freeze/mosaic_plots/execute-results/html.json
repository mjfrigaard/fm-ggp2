{
  "hash": "43300a3be02bbc3f6890241dadf92cc0",
  "result": {
    "markdown": "# Mosaic plots {.unnumbered}\n\n\n\n\n\n::: {.callout-tip appearance='simple' icon=false}\n***This graph is largely complete and just needs final proof reading.*** \n:::\n\n\n:::: {.callout-note collapse=\"false\" icon=false}\n\n::: {style=\"font-size: 1.25em; font-weight: bold; color: #02577A;\"}\nGraph info\n:::\n\n<br>\n\n\n::: {.cell layout-align=\"right\"}\n::: {.cell-output-display}\n![](mosaic_plots_files/figure-html/full_code_display-1.png){fig-align='right' width=60% height=60%}\n:::\n:::\n\n\n::: {style=\"font-size: 1.10em; color: #02577A;\"}\n**This graph requires:**\n:::\n\n::: {style=\"font-size: 1.05em; color: #282b2d;\"}\n✅ at least two categorical variables      \n:::\n\n::::\n\n## Description \n\nA mosaic plot is similar to a stacked bar graph, but instead of only relying on height and color to display the relative amount for each value, mosaic plots also use width.\n\nMosaic plot legends should be positioned on top or bottom and justified horizontally to preserve shape and improve readability. \n\nWe can build mosaic plots using the [`ggmosaic` package.](https://haleyjeppson.github.io/ggmosaic/)\n\n## Getting set up\n\n:::: {.panel-tabset}\n\n### Packages\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**PACKAGES:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nInstall packages.\n:::\n\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\ninstall.packages(\"fivethirtyeight\")\nlibrary(fivethirtyeight) \n# pak::pak(\"haleyjeppson/ggmosaic\")\nlibrary(ggmosaic)\nlibrary(ggplot2)\n```\n:::\n\n:::\n\n### Data\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**DATA:**\n:::\n\n::: {.column-margin}\n![](www/538.png){fig-align=\"right\" width=\"45%\" height=\"45%\"}\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nFor this graph, we'll be using the `fivethirtyeight::flying` dataset, after removing the missing values from `baby`, `recline_rude`,  and `unruly_child`. \n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nfly_mosaic <- fivethirtyeight::flying |> \n                dplyr::select(baby, unruly_child, recline_rude) |> \n                tidyr::drop_na()\nglimpse(fly_mosaic)\n#> Rows: 849\n#> Columns: 3\n#> $ baby         <ord> No, Somewhat, Somewhat, Somewhat, Ver…\n#> $ unruly_child <ord> No, Very, Very, Very, Very, Somewhat,…\n#> $ recline_rude <ord> Somewhat, No, No, No, No, Somewhat, N…\n```\n:::\n\n:::\n::::\n\n## The grammar\n\n:::: {.panel-tabset}\n\n### Code\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**CODE:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\n\nCreate labels with `labs()`\n\nInitialize the graph with `ggplot()` and provide `data`\n\nMap the `product()` of `unruly_child` and `baby` to the `x` axis\n\nMap `baby` to `fill`\n\nAdd `theme_mosaic()`\n\nMove the legend to the bottom with `theme(legend.position = \"bottom\")`\n\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nlabs_mosaic <- labs(\n      title = \"In general...\", \n      subtitle = \"...is it rude to...\",\n      x = \"... bring a baby on a plane?\",\n      y = \"...knowingly bring unruly children on a plane?\",\n      fill = \"Response\") \nggp2_mosaic <- ggplot(data = fly_mosaic) +\n   ggmosaic::geom_mosaic(mapping = \n          aes(x = product(unruly_child, baby), \n              fill = baby)) + \n    ggmosaic::theme_mosaic(base_size = 10) + \n    theme(legend.position = \"bottom\")\nggp2_mosaic + \n    labs_mosaic\n```\n:::\n\n:::\n\n### Graph\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**GRAPH:**\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n::: {.cell-output-display}\n![](mosaic_plots_files/figure-html/run_graph_mosaic-1.png){width=100% height=100%}\n:::\n:::\n\n:::\n\n### Details\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**DETAILS:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nWe've re-written the labels for the mosaic plot (`ggp2_mosaic`) to illustrate what's happening in the `aes()` of `geom_mosaic()`.\n:::\n\n::: {.column-margin}\n::: {style=\"font-size: 0.95em; color: #5f2042;\"}\nIt's a good idea to adjust the `fig-height` and `fig-width` of your graph\n:::\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-align=\"center\"}\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-paper\" style='font-size: 14px; font-family: \"Arial Narrow\", arial, helvetica, sans-serif; margin-left: auto; margin-right: auto;'>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> unruly_child </th>\n   <th style=\"text-align:right;\"> No </th>\n   <th style=\"text-align:right;\"> Somewhat </th>\n   <th style=\"text-align:left;\"> Very </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Very </td>\n   <td style=\"text-align:right;\"> 152 </td>\n   <td style=\"text-align:right;\"> 125 </td>\n   <td style=\"text-align:left;\"> 74 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Somewhat </td>\n   <td style=\"text-align:right;\"> 296 </td>\n   <td style=\"text-align:right;\"> 54 </td>\n   <td style=\"text-align:left;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> No </td>\n   <td style=\"text-align:right;\"> 144 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:left;\">  </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n::: {.cell-output-display}\n![](mosaic_plots_files/figure-html/create_table_mosaic-1.png){fig-align='center' width=100% height=100%}\n:::\n:::\n\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nThe table above displays the counts for each combined response. As we can see, the counts are represented by height and width in the graph.\n:::\n\n::::\n\n## More info\n\nI recommend reading the [`ggmosaic` vignette](https://haleyjeppson.github.io/ggmosaic/articles/ggmosaic.html), particularly the sections on ordering and conditioning. \n\n:::: {.panel-tabset}\n\n### Two variables\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-margin}\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-paper\" style='font-size: 12px; font-family: \"Arial Narrow\", arial, helvetica, sans-serif; margin-left: auto; margin-right: auto;'>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> unruly_child </th>\n   <th style=\"text-align:right;\"> No </th>\n   <th style=\"text-align:right;\"> Somewhat </th>\n   <th style=\"text-align:right;\"> Very </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Very </td>\n   <td style=\"text-align:right;\"> 193 </td>\n   <td style=\"text-align:right;\"> 119 </td>\n   <td style=\"text-align:right;\"> 39 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Somewhat </td>\n   <td style=\"text-align:right;\"> 204 </td>\n   <td style=\"text-align:right;\"> 123 </td>\n   <td style=\"text-align:right;\"> 24 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> No </td>\n   <td style=\"text-align:right;\"> 102 </td>\n   <td style=\"text-align:right;\"> 38 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n:::\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**TWO VARIABLES:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nBelow is another example of a two-variable mosaic plot, mapping the `product()` variables as `unruly_child` and `recline_rude`, and the `fill` variable as `recline_rude`.\n\nOnce again we can see the counts for each category in the cross-tabulation:\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code}\n# build 2-variable mosiac plot\nlabs_mosaic_2var <- labs(\n  title = \"In general...is it rude to...\", \n  subtitle = \"2-Variable plot\",\n  x = \"... recline your seat on a plane?\",\n  y = \"...knowingly bring unruly children on a plane?\",\n  fill = \"recline_rude responses\")\n\nggp2_mosaic_2var <- ggplot(data = fly_mosaic) +\n  geom_mosaic(aes(\n    x = product(unruly_child, recline_rude),\n    fill = recline_rude)) +\n  ggmosaic::theme_mosaic(base_size = 10) + \n  theme(legend.position = \"bottom\")\n  \nggp2_mosaic_2var + \n    labs_mosaic_2var\n```\n\n::: {.cell-output-display}\n![](mosaic_plots_files/figure-html/ggp2_mosaic_2var-1.png){width=100% height=100%}\n:::\n:::\n\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nFor conditional variables, we map the `product()` variable as `unruly_child` and the `fill` variable as `baby`, but include a `conds` variable (as `product(recline_rude)`).\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code}\n# build conditional mosiac plot\nlabs_mosaic_cond <- labs(\n  title = \"In general...is it rude to...\", \n  subtitle = \"Conditional plot\",\n  x = \"...recline your seat on a plane?\",\n  y = \"...knowingly bring unruly children on a plane?\",\n  fill = \"unruly_child responses\")\nggp2_mosaic_cond <- ggplot(data = fly_mosaic) +\n  geom_mosaic(aes(\n    x = product(unruly_child), # product variable\n    fill = unruly_child,\n    conds = product(recline_rude))) + # conditional variable\n  ggmosaic::theme_mosaic(base_size = 10) + \n  theme(legend.position = \"bottom\")\n\nggp2_mosaic_cond + \n    labs_mosaic_cond\n```\n\n::: {.cell-output-display}\n![](mosaic_plots_files/figure-html/ggp2_mosaic_cond-1.png){width=100% height=100%}\n:::\n:::\n\n:::\n\n### Facets\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**FACETS:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\n\nAnother option for including a conditioning variable is including facets. In the example below we use `recline_rude` in both `x` and `fill` (remember to wrap `recline_rude` in `product()`).\n\nThe `divider` argument let's us control the spine partitions (vertically and horizontally). Below are the two vertical orientation options for the `divider` argument. \n:::\n\n::: {style=\"font-size: 0.85em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n::: {.cell-output-display}\n![](mosaic_plots_files/figure-html/patchwork_mosaic_run_v-1.png){width=100% height=100%}\n:::\n:::\n\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nThe two horizontal orientation options make the axis text harder to read, so these need to be manipulated manually. \n:::\n\n::: {style=\"font-size: 0.85em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n::: {.cell-output-display}\n![](mosaic_plots_files/figure-html/patchwork_mosaic_run_h-1.png){width=100% height=100%}\n:::\n:::\n\n:::\n\n::::\n\n\n",
    "supporting": [
      "mosaic_plots_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}