{
  "hash": "dfaf6b346fbeceb7162220e5372d7139",
  "result": {
    "markdown": "# Density contours {.unnumbered}\n\n\n\n\n\n::: {.callout-tip appearance='simple' icon=false}\n***This graph is largely complete and just needs final proof reading.*** \n:::\n\n\n\n\n:::: {.callout-note collapse=\"false\" icon=false}\n\n::: {style=\"font-size: 1.25em; color: #02577A;\"}\nGraph info\n:::\n\n<br>\n\n\n::: {.cell layout-align=\"right\"}\n::: {.cell-output-display}\n![](density_contours_files/figure-html/full_code_display-1.png){fig-align='right' width=60% height=60%}\n:::\n:::\n\n\n::: {style=\"font-size: 1.10em; color: #02577A;\"}\n**This graph requires:**\n:::\n\n::: {style=\"font-size: 1.05em; color: #282b2d;\"}\n**✅ a categorical variable**      \n:::\n\n::: {style=\"font-size: 1.05em; color: #282b2d;\"}\n**✅ two numeric (continuous) variables**\n:::\n\n\n\n<!--\nThis technique works well when the point density changes slowly\nacross both the x and the y dimensions.\n-->\n\n::::\n\n## Description\n\nDensity contours (or 2-D density plots) are helpful for displaying differences in values between two numeric (continuous) variables. \n\nIn [topographical maps](https://en.wikipedia.org/wiki/Topography), contour lines are drawn around areas of equal elevation above sea-level. In density contours, the contour lines are drawn around the areas our data occupy (essentially replacing sea-level as '*an area without any x or y values.*')\n\nSpecifically, the contour lines outline areas on the graph with differing point densities, and semi-transparent colors (gradient) can be added to further highlight the separate regions.\n\n## Getting set up\n\n:::: {.panel-tabset}\n\n### Packages\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**PACKAGES:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nInstall packages.\n:::\n\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n```\n:::\n\n:::\n\n### Data\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**DATA:**\n:::\n\n::: {.column-margin}\n![Artwork by allison horst](www/lter_penguins.png){fig-align=\"right\" width=\"100%\" height=\"100%\"}\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nWe'll use the `penguins` data from the `palmerpenguins` package, but remove the missing values from `bill_length_mm`, `flipper_length_mm`, and `species`.\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\npeng_dnsty_2d <- palmerpenguins::penguins |>\n  dplyr::filter(!is.na(bill_length_mm) &\n    !is.na(flipper_length_mm) &\n    !is.na(species)) |>\n  dplyr::mutate(species = factor(species))\nglimpse(peng_dnsty_2d)\n#> Rows: 342\n#> Columns: 8\n#> $ species           <fct> Adelie, Adelie, Adelie, Adelie, …\n#> $ island            <fct> Torgersen, Torgersen, Torgersen,…\n#> $ bill_length_mm    <dbl> 39.1, 39.5, 40.3, 36.7, 39.3, 38…\n#> $ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, 19.3, 20.6, 17…\n#> $ flipper_length_mm <int> 181, 186, 195, 193, 190, 181, 19…\n#> $ body_mass_g       <int> 3750, 3800, 3250, 3450, 3650, 36…\n#> $ sex               <fct> male, female, female, female, ma…\n#> $ year              <int> 2007, 2007, 2007, 2007, 2007, 20…\n```\n:::\n\n:::\n::::\n\n## The grammar\n\n:::: {.panel-tabset}\n\n### Code\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**CODE:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\n\nCreate labels with `labs()`\n\nInitialize the graph with `ggplot()` and provide `data`\n\nCreate two values for extending the range of the `x` and `y` axis (`x_min`/`x_max` and `y_min`/`y_max`) \n\nMap `bill_length_mm` to `x` and `flipper_length_mm` to `y`\n\nAdd the `expand_limits()` function, assigning our stored values to `x` and `y`\n\nAdd the `geom_density_2d()` \n\n\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\n# labels\nlabs_dnsty_2d <- labs(\n  title = \"Bill Length vs. Flipper Length\",\n  x = \"Bill Length (mm)\",\n  y = \"Flipper length (mm)\"\n)\n\n# x limits\nx_min <- min(peng_dnsty_2d$bill_length_mm) - 5\nx_max <- max(peng_dnsty_2d$bill_length_mm) + 5\n# y limits\ny_min <- min(peng_dnsty_2d$flipper_length_mm) - 10\ny_max <- max(peng_dnsty_2d$flipper_length_mm) + 10\n\nggp2_dnsty_2d <- ggplot(\n  data = peng_dnsty_2d,\n  mapping = aes(\n    x = bill_length_mm,\n    y = flipper_length_mm\n  )\n) +\n  # use our stored values\n  expand_limits(\n    x = c(x_min, x_max),\n    y = c(y_min, y_max)\n  ) +\n  geom_density_2d()\n# plot\nggp2_dnsty_2d +\n  labs_dnsty_2d\n```\n:::\n\n:::\n\n### Graph\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**GRAPH:**\n:::\n\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n::: {.cell-output-display}\n![](density_contours_files/figure-html/create_graph_geom_density_2d-1.png){width=100% height=100%}\n:::\n:::\n\n\n::::\n\n## More info\n\nWe're going to break down how to create the density contour layer-by-layer using the `stat_density_2d()` function (which allows us to access some of the inner-workings of `geom_density_2d()`)\n\n:::: {.panel-tabset}\n\n### Base\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**BASE:**\n:::\n\n\n::: {style=\"font-size: 0.85em;\"}\n\nCreate a new set of labels\n\nInitialize the graph with `ggplot()` and provide `data`\n\nBuild a base layer: \n\n- Map `bill_length_mm` to `x` and `flipper_length_mm` to `y`  \n\n- Expand the `x` and `y` values with `expand_limits()` (using the values we created above)\n\n\n:::\n\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code}\nlabs_sdens_2d <- labs(\n  title = \"Bill Length vs. Flipper Length\",\n  x = \"Bill Length (mm)\",\n  y = \"Flipper length (mm)\",\n  color = \"Species\"\n)\n# base\nbase_sdens_2d <- ggplot(\n  data = peng_dnsty_2d,\n  mapping = aes(\n    x = bill_length_mm,\n    y = flipper_length_mm\n  )\n) +\n  expand_limits(\n    x = c(x_min, x_max),\n    y = c(y_min, y_max)\n  )\nbase_sdens_2d +\n  labs_sdens_2d\n```\n\n::: {.cell-output-display}\n![](density_contours_files/figure-html/code_graph_base_layer-1.png){width=100% height=100%}\n:::\n:::\n\n:::\n\n### Stat\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**STAT:**\n:::\n\n\n::: {style=\"font-size: 0.85em;\"}\n\nAdd the `stat_density_2d()` layer:\n\n- *Inside* `aes()`, use [`after_stat()`](https://ggplot2.tidyverse.org/reference/aes_eval.html) to map `level` to `fill` (from Help, \"*Evaluation after stat transformation will have access to the variables calculated by the stat, not the original mapped values.*\")\n\n- Set the `geom` to `\"polygon\"`\n\n- Change the `color` to black (`#000000`)\n\n- adjust the `linewidth` to `0.35`\n\n:::\n\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code}\nstat_sdens_2d <- base_sdens_2d +\n  stat_density_2d(\n    aes(fill = after_stat(level)),\n    geom = \"polygon\",\n    color = \"#000000\",\n    linewidth = 0.35\n  )\nstat_sdens_2d +\n  labs_sdens_2d\n```\n\n::: {.cell-output-display}\n![](density_contours_files/figure-html/code_graph_stat_layer-1.png){width=100% height=100%}\n:::\n:::\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n:::\n\n\n\n:::\n\n### Fill\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**FILL:**\n:::\n\n\n::: {style=\"font-size: 0.85em; color: #5f2042;\"}\n***Where did levels come from?***\n\n*You probably noticed the `stat_density_2d()` produced a legend with `level`, and a series of values for the color gradient. These numbers are difficult to interpret directly, but you can think of them as 'elevation changes' in point density. Read more [here on SO.](https://stackoverflow.com/questions/53172200/stat-density2d-what-does-the-legend-mean)*\n\n:::\n\n\n::: {style=\"font-size: 0.85em;\"}\n\nNow that we have a color gradient for our contour lines, we can adjust it's the range of colors using  `scale_fill_gradient()`\n\n- `low` is the color for the low values of `level`    \n- `high` is the color for the high values of `level`    \n- `guide` let's us control the `legend`    \n\nWe'll set these to white (`\"#ffffff\"`) and dark gray (`\"#404040\"`)\n\n:::\n\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code}\nfill_sdens_2d <- stat_sdens_2d +\n  scale_fill_gradient(\n    low = \"#ffffff\",\n    high = \"#404040\",\n    guide = \"legend\"\n  )\nfill_sdens_2d +\n  labs_sdens_2d\n```\n:::\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n::: {.cell-output-display}\n![](density_contours_files/figure-html/code_graph_fill_layer_pw-1.png){width=100% height=100%}\n:::\n:::\n\n\n:::\n\n### Points\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**POINTS:**\n:::\n\n\n::: {style=\"font-size: 0.85em;\"}\nThe dark areas in the contour lines are the areas with higher value density, but why don't we test that by adding some data points? \n\nAdd a `geom_point()` layer\n\n- *Inside* `aes()`, map `species` to `color` (this will tell us if the three dark areas represent differences in the three species in the dataset)\n\n- set `size` to `2`  \n\n- Change the `alpha` to `2/3`\n\n:::\n\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code}\n# geom_point()\npnts_sdens_2d <- fill_sdens_2d +\n  geom_point(aes(color = species),\n    size = 2,\n    alpha = 2 / 3\n  )\n# final\npnts_sdens_2d +\n  labs_sdens_2d\n```\n:::\n\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n::: {.cell-output-display}\n![](density_contours_files/figure-html/code_graph_points_layer_pw-1.png){width=100% height=100%}\n:::\n:::\n\n:::\n\n::::\n\n## Even more info\n\nIn the previous plot, we used the `species` variable in the `geom_point()` layer to identify the points using color. In the section below, we'll show more methods of displaying groups with density contour lines. \n\n:::: {.panel-tabset}\n\n### Groups\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**GROUPS:**\n:::\n\n\n::: {style=\"font-size: 0.85em;\"}\n\nRe-create the labels \n\nInitialize the graph with `ggplot()` and provide `data`\n\nBuild a `geom_density_2d()` layer:   \n\n  - Map `bill_length_mm` to `x` and `flipper_length_mm` to `y`  \n  \n  - Expand the limits using our adjusted min/max `x` and `y` values \n  \n  - Add the `geom_density_2d()`, mapping `species` to `color`  \n\nBuild the `geom_point()` layer:  \n\n  - Map `species` to `color` \n  \n  - set the `alpha` and remove the `legend` \n\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code}\nlabs_dnsty_2d_grp <- labs(\n  title = \"Bill Length vs. Flipper Length\",\n  x = \"Bill Length (mm)\",\n  y = \"Flipper length (mm)\",\n  color = \"Species\"\n)\n\nggp2_dnsty_2d_grp <- ggplot(\n  data = peng_dnsty_2d,\n  mapping = aes(\n    x = bill_length_mm,\n    y = flipper_length_mm\n  )\n) +\n  expand_limits(\n    x = c(x_min, x_max),\n    y = c(y_min, y_max)\n  ) +\n  geom_density_2d(aes(color = species))\n\n\nggp2_dnsty_2d_pnts <- ggp2_dnsty_2d_grp +\n  geom_point(aes(color = species),\n    alpha = 2 / 3,\n    show.legend = FALSE\n  )\n\nggp2_dnsty_2d_pnts +\n  labs_dnsty_2d_grp\n```\n\n::: {.cell-output-display}\n![](density_contours_files/figure-html/code_graph_points-1.png){width=100% height=100%}\n:::\n:::\n\n:::\n\n### Facets\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**FACETING:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\n\nRe-create the labels\n\nInitialize the graph with `ggplot()` and provide `data`\n\nBuild the base/limits: \n\n  - Map `bill_length_mm` to `x` and `flipper_length_mm` to `y`  \n  \n  - Expand the limits using our adjusted min/max `x` and `y` values \n\nBuild the `geom_density_2d_filled()` layer: \n\n  - Add the `geom_density_2d_filled()`, setting `linewidth` to `0.30` and `contour_var` to `\"ndensity\"`\n  \nAdd the `scale_discrete_manual()`:\n\n  - set `aesthetics` to `\"fill\"`  \n  \n  - Provide a set of color `values` (this plot needed 10 values, and I grabbed them all from [color-hex](https://www.color-hex.com/).\n  \nFacet: \n\n  - Add `facet_wrap()`, and place `species` in the [`vars()`](https://ggplot2.tidyverse.org/reference/vars.html)\n\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code}\nlabs_dnsty_2d_facet <- labs(\n  title = \"Bill Length vs. Flipper Length\",\n  subtitle = \"By Species\",\n  x = \"Bill Length (mm)\",\n  y = \"Flipper length (mm)\"\n)\nggp2_dnsty_2d_facet <- ggplot(\n  data = peng_dnsty_2d,\n  mapping = aes(\n    x = bill_length_mm,\n    y = flipper_length_mm\n  )\n) +\n  expand_limits(\n    x = c(x_min, x_max),\n    y = c(y_min, y_max)\n  ) +\n  geom_density_2d_filled(\n    linewidth = 0.30,\n    contour_var = \"ndensity\"\n  ) +\n  scale_discrete_manual(\n    aesthetics = \"fill\",\n    values = c(\n      \"#18507a\", \"#2986cc\", \"#3e92d1\", \"#539ed6\", \"#69aadb\",\n      \"#7eb6e0\", \"#a9ceea\", \"#bedaef\", \"#d4e6f4\", \"#e9f2f9\"\n    )\n  ) +\n  facet_wrap(vars(species))\n\nggp2_dnsty_2d_facet +\n  labs_dnsty_2d_facet\n```\n:::\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n::: {.cell-output-display}\n![](density_contours_files/figure-html/code_graph_facets_run-1.png){width=100% height=100%}\n:::\n:::\n\n\n:::\n\n\n### Fill \n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**Fill:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nIn the previous section, we defined the color values used in `geom_density_2d_filled()` with `scale_discrete_manual()`. Below we give an example using the default colors: \n:::\n\n::: {style=\"font-size: 0.85em;\"}\n\nRe-create the labels\n\nInitialize the graph with `ggplot()` and provide `data`\n\nBuild the base/limits: \n\n  - Map `bill_length_mm` to `x` and `flipper_length_mm` to `y`  \n  \n  - Expand the limits using our adjusted min/max `x` and `y` values \n\nAdd the `geom_density_2d()` layer\n\nAdd the `geom_density_2d_filled()`, setting `alpha` to `0.8`\n\n\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code}\nlabs_dnsty_2d <- labs(\n  title = \"Bill Length vs. Flipper Length\",\n  x = \"Bill Length (mm)\",\n  y = \"Flipper length (mm)\"\n)\n\nggp2_dnsty_2d <- ggplot(\n  data = peng_dnsty_2d,\n  mapping = aes(\n    x = bill_length_mm,\n    y = flipper_length_mm\n  )\n) +\n  # use our stored values\n  expand_limits(\n    x = c(x_min, x_max),\n    y = c(y_min, y_max)\n  ) +\n  geom_density_2d()\n\nggp2_dnsty_2d_fill <- ggp2_dnsty_2d +\n  geom_density_2d_filled(alpha = 0.8)\n\nggp2_dnsty_2d_fill +\n  labs_dnsty_2d\n```\n:::\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n::: {.cell-output-display}\n![](density_contours_files/figure-html/code_graph_fill_run-1.png){width=100% height=100%}\n:::\n:::\n\n:::\n\n### Lines\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**LINES:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\n\nWe can also outline the contours by adding color to the lines using another `geom_density_2d()` layer: \n\n  - set `linewidth` to `0.30`\n  \n  - set `color` to `\"#ffffff\"`\n\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code}\nggp2_dnsty_2d_fill_lns <- ggp2_dnsty_2d_fill +\n  geom_density_2d(\n    linewidth = 0.30,\n    color = \"#ffffff\"\n  )\nggp2_dnsty_2d_fill_lns +\n  labs_dnsty_2d\n```\n:::\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n::: {.cell-output-display}\n![](density_contours_files/figure-html/code_graph_lines_run-1.png){width=100% height=100%}\n:::\n:::\n\n\n:::\n\n::::\n\n",
    "supporting": [
      "density_contours_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}