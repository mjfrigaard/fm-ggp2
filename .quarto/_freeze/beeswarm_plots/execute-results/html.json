{
  "hash": "4eb4de003011b2af2307b308400f05f2",
  "result": {
    "markdown": "# Beeswarm plots {#sec-beeswa}\n\n\n\n\n\n::: {.callout-tip appearance='simple' icon=false}\n***This graph is largely complete and just needs final proof reading.*** \n:::\n\n\n:::: {.callout-note collapse=\"false\" icon=false}\n\n::: {style=\"font-size: 1.25em; color: #02577A;\"}\n\n:::\n\n<br>\n\n\n::: {.cell layout-align=\"right\"}\n::: {.cell-output-display}\n![](beeswarm_plots_files/figure-html/full_code_display-1.png){fig-align='right' width=60% height=60%}\n:::\n:::\n\n\n::: {style=\"font-size: 1.10em; color: #02577A;\"}\n**This graph requires:**\n:::\n\n::: {style=\"font-size: 1.05em; color: #282b2d;\"}\n**✅ a categorical variable**      \n:::\n\n::: {style=\"font-size: 1.05em; color: #282b2d;\"}\n**✅ a numeric (continuous) variable**\n:::\n\n::::\n\n## Description \n\nThe beeswarm plot uses points to display the distribution of a continuous variable across the levels of a categorical variable. \n\nThe points are grouped by level, and the shape (or swarm) of the distribution is mirrored above and below the quantitative axis (similar to a violin plot). \n\nWe can create beeswarm plot using `geom_jitter()` or the [`ggbeeswarm` package](https://github.com/eclarke/ggbeeswarm).\n\n## Set up\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**PACKAGES:**\n:::\n\n\nInstall packages.\n\n\n::: {style=\"font-size: 0.85em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\n# pak::pak(\"eclarke/ggbeeswarm\")\nlibrary(ggbeeswarm)\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n```\n:::\n\n:::\n\n\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**DATA:**\n:::\n\n::: {.column-margin}\n![Artwork by allison horst](www/lter_penguins.png){fig-align=\"right\" width=\"100%\" height=\"100%\"}\n:::\n\n\nCreate `peng_beeswarm` by grouping `penguins` by `species`, then calculating the `bill_ratio` (`bill_length_mm / bill_depth_mm`), and then removing any missing values from `bill_ratio`\n\n::: {style=\"font-size: 0.85em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\npeng_beeswarm <- palmerpenguins::penguins |> \n    dplyr::group_by(species) |> \n    dplyr::mutate(bill_ratio = bill_length_mm / bill_depth_mm) |>  \n    dplyr::filter(!is.na(bill_ratio)) |> \n    dplyr::ungroup()\nglimpse(peng_beeswarm)\n#> Rows: 342\n#> Columns: 9\n#> $ species           <fct> Adelie, Adelie, Adelie…\n#> $ island            <fct> Torgersen, Torgersen, …\n#> $ bill_length_mm    <dbl> 39.1, 39.5, 40.3, 36.7…\n#> $ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, 19.3…\n#> $ flipper_length_mm <int> 181, 186, 195, 193, 19…\n#> $ body_mass_g       <int> 3750, 3800, 3250, 3450…\n#> $ sex               <fct> male, female, female, …\n#> $ year              <int> 2007, 2007, 2007, 2007…\n#> $ bill_ratio        <dbl> 2.090909, 2.270115, 2.…\n```\n:::\n\n:::\n\n## Grammar\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**CODE:**\n:::\n\n  -   Create labels with `labs()`\n\n  -   Initialize the graph with `ggplot()` and provide `data`\n\n  -   Map `species` to the `x` axis and `color`\n\n  -   Map `bill_ratio` to the `y` axis\n\n  -   Add the `ggbeeswarm::geom_beeswarm()` layer (with `alpha`)\n\n  -   Remove the legend with `show.legend = FALSE`\n\n::: {style=\"font-size: 0.85em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nlabs_beeswarm <- labs(\n    title = \"Adult Foraging Penguins\",\n    subtitle = \"Bill Length (mm) / Bill Depth (mm) = Bill Ratio\",\n    x = \"Species\",\n    y = \"Bill Ratio\")\nggp2_beeswarm <- ggplot(data = peng_beeswarm,\n    aes(x = species,\n        y = bill_ratio,\n        color = species)) +\n    ggbeeswarm::geom_beeswarm(alpha = 2 / 3,\n        show.legend = FALSE)\nggp2_beeswarm +\n    labs_beeswarm\n```\n:::\n\n:::\n\n\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**GRAPH:**\n:::\n\nAdjust the size/shape of the swarm using `method =` or the  `geom_quasirandom()` function\n\n::: {style=\"font-size: 0.85em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n::: {.cell-output-display}\n![](beeswarm_plots_files/figure-html/create_graph_beeswarm-1.png){width=100% height=100%}\n:::\n:::\n\n:::\n\n\n## More info\n\nBelow is some additional arguments and methods for beeswarm plots.\n\n### `method`\n\n<br>\n\nUse method to adjust the shape of the beeswarm (`swarm`, `compactswarm`, `hex`, `square`, `center`, or `centre`)\n\n:::: {.column-margin}\n::: {style=\"font-size: 0.95rem;\"}\nSet the point `shape` to `21` to control the `fill` and `color` \n:::\n::::\n\n::: {style=\"font-size: 0.85em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code}\nggp2_compact_swarm <- ggplot(data = peng_beeswarm,\n    mapping = aes(x = species,\n                  y = bill_ratio,\n                color = species)) +\n    ggbeeswarm::geom_beeswarm(\n      aes(fill = species),\n        method = 'compactswarm', \n        dodge.width = 0.5,\n        shape = 21,\n        color = \"#ffffff\",\n        alpha = 2/3, size = 1.7,\n        show.legend = FALSE) \nggp2_compact_swarm + \n    # add labels\n    labs_beeswarm\n```\n\n::: {.cell-output-display}\n![](beeswarm_plots_files/figure-html/create_graph_beeswarm_method-1.png){width=100% height=100%}\n:::\n:::\n\n:::\n\n### `side`\n\n<br>\n\nFor a beeswarm that falls across the vertical axis, use the `side` argument. \n\n::: {style=\"font-size: 0.85em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code}\nggp2_rside_swarm <- ggplot(data = peng_beeswarm,\n    mapping = aes(x = species,\n                  y = bill_ratio,\n                color = species)) +\n    ggbeeswarm::geom_beeswarm(\n      aes(fill = species),\n        side = 1, # right/upwards\n        shape = 21,\n        color = \"#ffffff\",\n        alpha = 2/3, \n        size = 1.7,\n        show.legend = FALSE) \nggp2_rside_swarm + \n    # add labels\n    labs_beeswarm\n```\n\n::: {.cell-output-display}\n![](beeswarm_plots_files/figure-html/create_graph_beeswarm_side-1.png){width=100% height=100%}\n:::\n:::\n\n:::\n\n### `cex`\n\n<br>\n\nThe `cex` argument controls the \"*scaling for adjusting point spacing*\"\n\n::: {style=\"font-size: 0.85em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code}\nggp2_beeswarm_cex <- ggplot(data = peng_beeswarm,\n    mapping = aes(x = species,\n                  y = bill_ratio,\n                color = species)) +\n    ggbeeswarm::geom_beeswarm(\n      aes(fill = species),\n        cex = 1.6,\n        shape = 21,\n        color = \"#ffffff\",\n        alpha = 2/3, \n        size = 1.7,\n        show.legend = FALSE) \nggp2_beeswarm_cex + \n    # add labels\n    labs_beeswarm\n```\n\n::: {.cell-output-display}\n![](beeswarm_plots_files/figure-html/create_graph_beeswarm_cex-1.png){width=100% height=100%}\n:::\n:::\n\n\n:::\n\n### `geom_jitter()`\n\n<br>\n\nWe can also create a beeswarm using the `geom_jitter()` and setting the `height` and `width`.\n\n::: {style=\"font-size: 0.85em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code}\nggp2_jitter_swarm <- ggplot(data = peng_beeswarm,\n    mapping = aes(x = species,\n        y = bill_ratio,\n        color = species)) +\n    geom_jitter(\n        aes(fill = species),\n        height = 0.05,\n        width = 0.11,\n        shape = 21,\n        color = \"#ffffff\",\n        alpha = 2 / 3,\n        size = 1.7,\n        show.legend = FALSE)\nggp2_jitter_swarm + \n    # add labels\n    labs_beeswarm\n```\n\n::: {.cell-output-display}\n![](beeswarm_plots_files/figure-html/create_graph_beeswarm_jitter-1.png){width=100% height=100%}\n:::\n:::\n\n:::\n",
    "supporting": [
      "beeswarm_plots_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}