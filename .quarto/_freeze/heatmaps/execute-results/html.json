{
  "hash": "7d6d4533af04de6d5ff57f99a27a3ddc",
  "result": {
    "engine": "knitr",
    "markdown": "# Heatmaps {#sec-heatmaps}\n\n\n\n\n\n\n\n\n\n\n\n:::: {.callout-note collapse=\"false\" icon=false}\n\n<br>\n\n::: {style=\"font-size: 1.10em; color: #02577A;\"}\n**This graph requires:**\n:::\n\n::: {style=\"font-size: 1.05em; color: #282b2d;\"}\n**✅ two numeric (continuous) variables**\n\n**✅ a categorical variable** \n:::\n\n\n\n\n::: {.cell layout-align=\"right\"}\n::: {.cell-output-display}\n![](heatmaps_files/figure-html/full_code_display-1.png){fig-align='right' width=60% height=60%}\n:::\n:::\n\n\n\n\n::::\n\n## Description \n\nHeatmaps are color graphs that show data as a matrix with categories on the x and y axes. Each cell's color corresponds to its value. They are useful for showing magnitude in two dimensions and often include a color scale. The intersecting cells contain variations of color saturation (i.e., the grade of purity or vividness) to represent the numerical values between groups.\n\nHeatmap legends should be positioned on top or bottom and justified horizontally to preserve shape and improve readability. \n\n## Set up\n\n::: {style=\"font-size: 1.10em; color: #1e83c8;\"}\n**PACKAGES:**\n:::\n\n\nInstall packages.\n\n::: {style=\"font-size: 0.85em;\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\ninstall.packages(\"fivethirtyeight\")\nlibrary(fivethirtyeight) \nlibrary(ggplot2)\n```\n:::\n\n\n\n:::\n\n\n\n::: {style=\"font-size: 1.10em; color: #1e83c8;\"}\n**DATA:**\n:::\n\n::: {.column-margin}\n![](www/538.png){fig-align=\"right\" width=\"45%\" height=\"45%\"}\n:::\n\n\nFor the heatmap, we're going to re-structure and filter the `bob_ross` data from the `fivethirtyeight` package.\n\n::: {style=\"font-size: 0.85em;\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nheatmap_ross <- fivethirtyeight::bob_ross |>\n  pivot_longer(-c(episode, season,\n    episode_num, title),\n    names_to = \"object\",\n    values_to = \"present\") |>\n  mutate(present = as.logical(present),\n    object = str_replace_all(object, \"_\", \" \")) |>\n  arrange(episode, object) |> \n  filter(object %in% c(\"conifer\", \"trees\", \n    \"tree\", \"snow\", \"palm trees\", \"grass\", \n    \"flowers\", \"cactus\", \"bushes\", \"cirrus\", \n    \"cumulus\", \"deciduous\", \"clouds\", \"fog\")) |>\n  group_by(season, object) |>\n  summarise(occurrences = sum(present)) |>\n  ungroup()\n#> `summarise()` has grouped output by 'season'. You\n#> can override using the `.groups` argument.\n```\n:::\n\n\n\n:::\n\n## Grammar\n\n::: {style=\"font-size: 1.10em; color: #1e83c8;\"}\n**CODE:**\n:::\n\n  -  Create labels with `labs()`\n\n  -  Initialize the graph with `ggplot()` and provide `data`\n\n  -  Assign `season` to `x`, `object` to `y`, and `occurrences` to `fill`\n\n  -  Add the `geom_tile()`\n\n  -  Move the legend to the bottom with `theme(legend.position = \"bottom\")`\n\n::: {style=\"font-size: 0.85em;\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nlabs_heatmap_tile <- labs(\n  title = \"Bob Ross' plants & clouds\", \n  x = \"Episode\", \n  y = \"Plant & Cloud Objects\", \n  fill = \"Occurrences\")\nggp2_heatmap_tile <- ggplot(data = heatmap_ross, \n       aes(x = season, \n           y = object, \n           fill = occurrences)) + \n       geom_tile() + \n    theme(legend.position = \"bottom\")\nggp2_heatmap_tile + \n  labs_heatmap_tile\n```\n:::\n\n\n\n:::\n\n\n\n::: {style=\"font-size: 1.10em; color: #1e83c8;\"}\n**GRAPH:**\n:::\n\n\n\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n::: {.cell-output-display}\n![](heatmaps_files/figure-html/create_graph_heatmap-1.png){width=100% height=100%}\n:::\n:::\n\n\n\n\n\n## More info\n\nIn addition to `geom_tile()`, heatmaps can also be created with the `geom_raster()` function.\n\n### `geom_raster()`\n\n<br>\n\n  -  Create labels with `labs()`\n\n  -  Initialize the graph with `ggplot()` and provide `data`\n\n  -  Assign `season` to `x`, `object` to `y`, and `occurrences` to fill\n\n  -  Add the `geom_raster()`\n\n  -  Move the legend to the bottom with `theme(legend.position = \"bottom\")`\n\n::: {style=\"font-size: 0.85em;\"}\n\n\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code}\nlabs_heatmap_raster <- labs(\n  title = \"Bob Ross' plants & clouds\", \n  x = \"Episode\", \n  y = \"Plant/Cloud Object\", \n  fill = \"Occurrences\")\nggp2_heatmap_raster <- ggplot(data = heatmap_ross, \n       aes(x = season, \n           y = object, \n           fill = occurrences)) + \n       geom_raster() + \n    theme(legend.position = \"bottom\")\nggp2_heatmap_raster + \n  labs_heatmap_raster\n```\n\n::: {.cell-output-display}\n![](heatmaps_files/figure-html/code_graph_raster-1.png){width=576}\n:::\n:::\n\n\n\n:::\n\n\n",
    "supporting": [
      "heatmaps_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}