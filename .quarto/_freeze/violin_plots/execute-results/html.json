{
  "hash": "ecce8461998e97fdb639083e671e6007",
  "result": {
    "engine": "knitr",
    "markdown": "# Violin plots {#sec-violin-plots}\n\n\n\n\n\n\n\n\n::: {.callout-tip appearance='simple' icon=false}\n***This graph is largely complete and just needs final proof reading.*** \n:::\n\n\n\n\n\n:::: {.callout-note collapse=\"false\" icon=false}\n\n::: {style=\"font-size: 1.10em; color: #02577A;\"}\n**This graph requires:**\n:::\n\n::: {style=\"font-size: 1.05em; color: #282b2d;\"}\n**✅ a numeric (continuous) variable**\n:::\n\n<br>\n\n\n\n\n\n::: {.cell layout-align=\"right\"}\n::: {.cell-output-display}\n![](violin_plots_files/figure-html/full_code_display-1.png){fig-align='right' width=60% height=60%}\n:::\n:::\n\n\n\n\n\n::::\n\n## Description\n\nViolin plots show data distribution and probability density. They are like box plots but have a rotated kernel density plot on each side. We can use them to compare data distribution across categories.\n\n::: {.column-margin}\n\nThe violin plot is essentially a mirrored density plot, in which a smoothed distribution is plotted symmetrically across the `x` or `y` axis, creating a Rorschach-like inkblot area for the distribution:\n\n![source: Rorschach test, Wikipedia](https://upload.wikimedia.org/wikipedia/commons/7/70/Rorschach_blot_01.jpg){fig-align=\"right\" width=\"100%\" height=\"100%\"}\n:::\n\n## Set up\n\n::: {style=\"font-size: 1.10em; color: #1e83c8;\"}\n**PACKAGES:**\n:::\n\n::: {style=\"font-size: 0.95rem;\"}\nInstall packages.\n:::\n\n\n::: {style=\"font-size: 0.85em;\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n```\n:::\n\n\n\n\n:::\n\n\n\n::: {style=\"font-size: 1.10em; color: #1e83c8;\"}\n**DATA:**\n:::\n\n::: {.column-margin}\n![Artwork by Allison Horst](www/lter_penguins.png){fig-align=\"right\" width=\"100%\" height=\"100%\"}\n:::\n\n::: {style=\"font-size: 0.95rem;\"}\nThe `penguins` data.\n:::\n\n::: {style=\"font-size: 0.85em;\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\npenguins <- palmerpenguins::penguins\nglimpse(penguins)\n#> Rows: 344\n#> Columns: 8\n#> $ species           <fct> Adelie, Adelie, Adelie…\n#> $ island            <fct> Torgersen, Torgersen, …\n#> $ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, …\n#> $ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, …\n#> $ flipper_length_mm <int> 181, 186, 195, NA, 193…\n#> $ body_mass_g       <int> 3750, 3800, 3250, NA, …\n#> $ sex               <fct> male, female, female, …\n#> $ year              <int> 2007, 2007, 2007, 2007…\n```\n:::\n\n\n\n\n:::\n\n\n## Grammar \n\n::: {style=\"font-size: 1.10em; color: #1e83c8;\"}\n**CODE:**\n:::\n\n::: {style=\"font-size: 0.95rem;\"}\n\nCreate labels with `labs()`\n\nInitialize the graph with `ggplot()` and provide `data`\n\n  - Place an empty string (`\"\"`) in the `x` argument\n\nMap and empty string (`\"\"`) to the `x` and `flipper_length_mm` to the `y`\n\nAdd `geom_violin()`\n\n:::\n\n::: {style=\"font-size: 0.85em;\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nlabs_violin <- labs(\n  title = \"Adult foraging penguins\",\n  subtitle = \"Distribution of flipper length\",\n  x = \"\",\n  y = \"Flipper length (millimeters)\")\nggp2_violin <- ggplot(data = penguins,\n       aes(x = '', \n           y = flipper_length_mm)) +\n       geom_violin() \nggp2_violin + \n  labs_violin\n```\n:::\n\n\n\n\n:::\n\n\n\n::: {style=\"font-size: 1.10em; color: #1e83c8;\"}\n**GRAPH:**\n:::\n\n\n\n\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n::: {.cell-output-display}\n![](violin_plots_files/figure-html/create_graph_violin-1.png){width=100% height=100%}\n:::\n:::\n",
    "supporting": [
      "violin_plots_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}