{
  "hash": "548870878a3b4e3a09398aedc615933c",
  "result": {
    "markdown": "# Cleveland dot plot {#sec-cleveland-dot-plots}\n\n\n\n\n\n:::: {.callout-note collapse=\"false\" icon=false}\n\n<br>\n\n\n::: {.cell layout-align=\"right\"}\n::: {.cell-output-display}\n![](cleveland_dot_plots_files/figure-html/full_code_display-1.png){fig-align='right' width=60% height=60%}\n:::\n:::\n\n\n::: {style=\"font-size: 1.10em; color: #02577A;\"}\n**This graph requires:**\n:::\n\n::: {style=\"font-size: 1.05em; color: #282b2d;\"}\n\n**✅ a numeric (continuous) variable**\n\n**✅ at least one categorical variable (with two levels)**  \n\n:::\n\n::::\n\n## Description \n\nA Cleveland dot plot displays differences in a numerical variable for different levels of a categorical variable.\n\nTypically, the graph contains two points representing the numerical value on the `y` axis, differentiated by color. A line connecting the two points represents the difference between the two categorical levels (the width of the line is the size of the difference).\n\n## Set up\n\n::: {style=\"font-size: 1.10em; color: #1e83c8;\"}\n**PACKAGES:**\n:::\n\nInstall packages.\n\n::: {style=\"font-size: 0.85em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n```\n:::\n\n:::\n\n\n\n::: {style=\"font-size: 1.10em; color: #1e83c8;\"}\n**DATA:**\n:::\n\n::: {.column-margin}\n![Artwork by Allison Horst](www/lter_penguins.png){fig-align=\"right\" width=\"100%\" height=\"100%\"}\n:::\n\n\nRemove missing values from `sex` and `flipper_length_mm` and group on `sex` and `island` to the calculate the median flipper length (`med_flip_length_mm`).\n\n::: {style=\"font-size: 0.85em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\npeng_clev_dots <- palmerpenguins::penguins |>\n    dplyr::filter(!is.na(sex) & !is.na(flipper_length_mm)) |>\n    dplyr::group_by(sex, island) |>\n    dplyr::summarise(\n        med_flip_length_mm = median(flipper_length_mm)\n        ) |>\n    dplyr::ungroup()\n#> `summarise()` has grouped output by 'sex'. You\n#> can override using the `.groups` argument.\nglimpse(peng_clev_dots)\n#> Rows: 6\n#> Columns: 3\n#> $ sex                <fct> female, female, femal…\n#> $ island             <fct> Biscoe, Dream, Torger…\n#> $ med_flip_length_mm <dbl> 210, 190, 189, 219, 1…\n```\n:::\n\n:::\n::::\n\n## Grammar\n\n::: {style=\"font-size: 1.10em; color: #1e83c8;\"}\n**CODE:**\n:::\n\n  -   Create labels with `labs()`\n\n  -   Initialize the graph with `ggplot()` and provide `data`\n\n  -   Map the `med_flip_length_mm` to the `x` axis, and `island` to the `y` axis, but wrap `island` in `forcats::fct_rev()`.\n\n  -   Add `geom_line()`, and map `island` to the `group` aesthetic. Set the `linewidth` to `0.75`\n\n  -   Add `geom_point()` and map `sex` to `color` aesthetic. Set the `size` to `2.25`\n\n::: {style=\"font-size: 0.85em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nlabs_clev_dots <- labs(\n    title = \"Flipper Length Differences\",\n    subtitle = \"Male and female penguins\",\n    x = \"Median Flipper Length\",\n    y = \"Island\",\n    color = \"Sex\")\n\nggp2_clev_dots <- ggplot(data = peng_clev_dots,\n                mapping = aes(x = med_flip_length_mm, \n                              y = fct_rev(island))) +\n                geom_line(aes(group = island), \n                    linewidth = 0.75) + \n                geom_point(aes(color = sex), \n                    size = 2.25) \n\nggp2_clev_dots + \n    labs_clev_dots\n```\n:::\n\n:::\n\n\n\n::: {style=\"font-size: 1.10em; color: #1e83c8;\"}\n**GRAPH:**\n:::\n\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n::: {.cell-output-display}\n![](cleveland_dot_plots_files/figure-html/create_graph_clev_dots-1.png){width=576}\n:::\n:::\n\n\n::::\n\n## More info\n\nCleveland dot plots are also helpful when comparing multiple differences on a common scale.\n\n### Common scale\n\n::: {style=\"font-size: 1.10em; color: #1e83c8;\"}\n**SCALE:**\n:::\n\n  -   Remove missing values from `sex`, `bill_length_mm` and `bill_depth_mm`, and group on `sex` and `island` to the calculate the median bill length and median bill depth. These variables need to have 'showtime-ready' names because they'll be used in our facets. \n\n  -   After un-grouping the data, pivot the new columns into a long (tidy) format with `median_measure` containing the name of the variable, and `median_value` containing the numbers. \n\n  -   Finally, convert `median_measure` into a factor. \n\n::: {style=\"font-size: 0.85em;\"}\n\n::: {.cell}\n\n```{.r .cell-code}\npeng_clev_dots2 <- palmerpenguins::penguins |>\n    dplyr::filter(!is.na(sex) & \n            !is.na(bill_length_mm) & \n                !is.na(bill_depth_mm)) |>\n    dplyr::group_by(sex, island) |>\n    dplyr::summarise(\n        `Median Bill Length` = median(bill_length_mm),\n        `Median Bill Depth` = median(bill_depth_mm)) |>\n    dplyr::ungroup() |> \n    tidyr::pivot_longer(cols = starts_with(\"Med\"), \n        names_to = \"median_measure\", \n        values_to = \"median_value\") |> \n    dplyr::mutate(median_measure = factor(median_measure))\n#> `summarise()` has grouped output by 'sex'. You\n#> can override using the `.groups` argument.\nglimpse(peng_clev_dots2)\n#> Rows: 12\n#> Columns: 4\n#> $ sex            <fct> female, female, female, f…\n#> $ island         <fct> Biscoe, Biscoe, Dream, Dr…\n#> $ median_measure <fct> Median Bill Length, Media…\n#> $ median_value   <dbl> 44.90, 14.50, 42.50, 17.8…\n```\n:::\n\n:::\n\n### Scales\n\n::: {style=\"font-size: 1.10em; color: #1e83c8;\"}\n**`scales`:**\n:::\n\n  -   Re-create labels\n\n  -   Initialize the graph with `ggplot()` and provide `data`\n\n  -   Map the `median_value` to the `x` axis, and `island` to the `y` axis, but wrap `island` in `forcats::fct_rev()`.\n\n  -   Add `geom_line()`, and map `island` to the `group` aesthetic. Set the `linewidth` to `0.75`\n\n  -   Add `geom_point()` and map `sex` to `color` aesthetic. Set the `size` to `2.25`\n\n  -   Add `facet_wrap()` and facet by `median_measure`, setting `shrink` to `TRUE` and `scales` to `\"free_x\"`\n\n  -   Move the legend with `theme(legend.position = \"top\")`\n\n::: {style=\"font-size: 0.85em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code}\nlabs_clev_dots2 <- labs(\n    title = \"Penguin Measurements Differences\",\n    subtitle = \"Male and female penguins\",\n    x = \"Median Bill Length/Depth (mm)\",\n    y = \"Island\",\n    color = \"Sex\")\n\nggp2_clev_dots2 <- ggplot(data = peng_clev_dots2,\n    mapping = aes(x = median_value,\n        y = fct_rev(island))) +\n    geom_line(aes(group = island),\n        linewidth = 0.55) +\n    geom_point(aes(color = sex),\n        size = 2) +\n    facet_wrap(. ~ median_measure,\n        shrink = TRUE, nrow = 2) +\n    theme(legend.position = \"top\")\n\nggp2_clev_dots2 +\n    labs_clev_dots2\n```\n\n::: {.cell-output-display}\n![](cleveland_dot_plots_files/figure-html/graph_run_clev_dots_nrow_2-1.png){width=100% height=100%}\n:::\n:::\n\n:::\n\n::: {style=\"font-size: 1.00em; color: #E74A2F;\"}\n**CAUTION when using `scales = \"free_x\"`:**\nThe graph below shows that the median bill length and depth is larger for male penguins on all three islands, but the magnitude of the differences should be interpreted with caution because the length of the lines can't be directly compared! \n:::\n\n::: {style=\"font-size: 0.85em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code}\nlabs_clev_dots2 <- labs(\n    title = \"Penguin Measurements Differences\",\n    subtitle = \"Male and female penguins\",\n    x = \"Median Bill Length/Depth (mm)\",\n    y = \"Island\",\n    color = \"Sex\")\n\nggp2_clev_dots2_free_x <- ggplot(data = peng_clev_dots2,\n    mapping = aes(x = median_value,\n        y = fct_rev(island))) +\n    geom_line(aes(group = island),\n        linewidth = 0.55) +\n    geom_point(aes(color = sex),\n        size = 2) +\n    facet_wrap(. ~ median_measure,\n        shrink = TRUE, nrow = 2,\n        scales = \"free_x\") +\n    theme(legend.position = \"top\")\n\nggp2_clev_dots2_free_x +\n    labs_clev_dots2\n```\n\n::: {.cell-output-display}\n![](cleveland_dot_plots_files/figure-html/graph_run_clev_dots2_free_x-1.png){width=100% height=100%}\n:::\n:::\n\n:::\n",
    "supporting": [
      "cleveland_dot_plots_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}