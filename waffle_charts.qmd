# Waffle charts {#sec-waffle-charts}

```{r}
#| label: setup
#| message: false
#| warning: false
#| include: false
library(tidyverse)
library(lubridate)
library(scales)
library(knitr)
library(kableExtra)
library(colorblindr)
library(downlit)
# fonts ----
library(extrafont)
library(sysfonts)
source("_common.R")
# use font
showtext::showtext_auto()
# set theme
ggplot2::theme_set(theme_ggp2g(
    base_size = 15))
```

```{r}
#| label: status
#| results: "asis"
#| echo: false
# status ----
# polishing, restructuring, drafting, complete
status("complete")
```


:::: {.callout-note collapse="false" icon=false}

<br>

```{r}
#| label: full_code_display
#| eval: true
#| echo: false
#| warning: false
#| message: false
#| out-height: '60%'
#| out-width: '60%'
#| fig-align: right
library(ggwaffle)
library(palmerpenguins) 
library(ggplot2)
penguins <- palmerpenguins::penguins
penguins <- dplyr::mutate(penguins, 
              species = as.character(species))
waffle_peng <- ggwaffle::waffle_iron(penguins,
                      aes_d(group = species))
labs_waffle <- labs(
  title = "Palmer penguin species",
  x = "", y = "", fill = "Species")
ggp2_waffle <- ggplot(data = waffle_peng, 
       aes(x = x, 
           y = y, 
           fill = group)) + 
  ggwaffle::geom_waffle() 
ggp2_waffle + 
  labs_waffle +
  ggwaffle::theme_waffle() + 
  theme(legend.position = "top")
```

::: {style="font-size: 1.10em; color: #02577A;"}
**This graph requires:**
:::


::: {style="font-size: 1.05em; color: #282b2d;"}
**`r emo::ji("check")` a categorical variable** 
:::

::::

## Description 

Waffle charts use color to display the levels that make up the values in a categorical variable. The counts for each level are divided into separate colors into a square or grid display.

Waffle chart legends should be positioned on top or bottom and justified horizontally to preserve shape and improve readability. 

Weâ€™ll build a waffle chart using the [`ggwaffle` package.](https://liamgilbey.github.io/ggwaffle/)

## Set up

::: {style="font-size: 1.10em; color: #1e83c8;"}
**PACKAGES:**
:::

Install packages.


::: {style="font-size: 0.85em;"}
```{r}
#| label: pkg_code_waffle
#| code-fold: show
#| eval: true
#| echo: true
#| warning: false
#| message: false
#| results: hide
library(pak)
library(ggwaffle)
install.packages("palmerpenguins")
library(palmerpenguins) 
library(ggplot2)
```
:::



::: {style="font-size: 1.10em; color: #1e83c8;"}
**DATA:**
:::


::: {.column-margin}
![Artwork by Allison Horst](www/lter_penguins.png){fig-align="right" width="100%" height="100%"}
:::

Waffle charts require a special data transformation with `ggwaffle::waffle_iron()`

Set the group argument in `ggwaffle::aes_d()` as the categorical variable you want to see the relative counts for:

::: {style="font-size: 0.85em;"}
```{r}
#| label: data_code_waffle
#| code-fold: show
#| eval: true
#| echo: true
penguins <- palmerpenguins::penguins
penguins <- dplyr::mutate(penguins, 
              species = as.character(species))
waffle_peng <- ggwaffle::waffle_iron(penguins,
                      aes_d(group = species))

glimpse(waffle_peng)
```
:::


## Grammar

::: {style="font-size: 1.10em; color: #1e83c8;"}
**CODE:**
:::

::: {style="font-size: 0.95rem;"}

  -   Create labels with `labs()`

  -   Initialize the graph with `ggplot()` and provide `data`

  -   Map the `x` and `y` to the `x` and `y` axes

  -   Map `group` to `fill`

  -   Add `ggwaffle::geom_waffle()`

  -   Add `ggwaffle::theme_waffle()`

  -   Move the legend to the top with `theme(legend.position = "top")`

:::

::: {style="font-size: 0.85em;"}
```{r}
#| label: code_graph_waffle
#| code-fold: show
#| eval: false
#| echo: true 
#| warning: false
#| message: false
#| out-height: '100%'
#| out-width: '100%'
labs_waffle <- labs(
  title = "Palmer penguin species",
  x = "", y = "", fill = "Species")
ggp2_waffle <- ggplot(data = waffle_peng, 
       aes(x = x, 
           y = y, 
           fill = group)) + 
  ggwaffle::geom_waffle() +
  theme(legend.position = "top")
ggp2_waffle + 
  labs_waffle +
  ggwaffle::theme_waffle()
```
:::



::: {style="font-size: 1.10em; color: #1e83c8;"}
**GRAPH:**
:::

```{r}
#| label: create_graph_waffle
#| eval: true
#| echo: false
#| warning: false
#| message: false
#| out-height: '100%'
#| out-width: '100%'
#| layout-nrow: 1
#| column: page-inset-right
labs_waffle <- labs(
  title = "Palmer penguin species",
  x = "", y = "", fill = "Species")
ggp2_waffle <- ggplot(data = waffle_peng, 
       aes(x = x, 
           y = y, 
           fill = group)) + 
  ggwaffle::geom_waffle() 
ggp2_waffle + 
  labs_waffle +
  ggwaffle::theme_waffle() +
  theme(legend.position = "top")
```

