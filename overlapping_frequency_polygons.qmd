# Overlapping frequency polygons {#sec-overlapping-frequency-polygons}

```{r}
#| label: setup
#| message: false
#| warning: false
#| include: false
library(tidyverse)
library(lubridate)
library(scales)
library(knitr)
library(kableExtra)
library(colorblindr)
library(downlit)
# fonts ----
library(extrafont)
library(sysfonts)
source("_common.R")
# use font
showtext::showtext_auto()
# set theme
ggplot2::theme_set(theme_ggp2g(
    base_size = 15))
```

```{r}
#| label: status
#| results: "asis"
#| echo: false
# status ----
# polish, dev, draft, complete
status("complete")
```



:::: {.callout-note collapse="false" icon=false}

<br>

```{r}
#| label: full_code_display
#| eval: true
#| echo: false
#| warning: false
#| message: false
#| out-height: '60%'
#| out-width: '60%'
#| fig-align: right
library(palmerpenguins) 
library(ggplot2)
penguins <- palmerpenguins::penguins
labs_ovrlp_freq_poly <- labs(
  title = "Adult foraging penguins",
  x = "Flipper length (mm)",
  color = "Species")
ggp2_ovrlp_freq_poly <- ggplot(data = penguins, 
       aes(x = flipper_length_mm,
           group = species)) + 
  geom_freqpoly(aes(color = species))
ggp2_ovrlp_freq_poly + 
  labs_ovrlp_freq_poly
```

::: {style="font-size: 1.10em; color: #02577A;"}
**This graph requires:**
:::

::: {style="font-size: 1.05em; color: #282b2d;"}
**`r emo::ji("check")` a categorical variable**      
:::

::: {style="font-size: 1.05em; color: #282b2d;"}
**`r emo::ji("check")` a numeric (continuous) variable**
:::

::::

## Description 

Overlapping frequency polygons are similar to overlapping histograms--they allow us to compare distributions of a continuous variable across the levels of a categorical variable.

Instead of using bars, frequency polygons use lines to show the shape of the distribution. 

## Set up

::: {style="font-size: 1.15em; color: #1e83c8;"}
**PACKAGES:**
:::

Install packages.

::: {style="font-size: 0.85em;"}
```{r}
#| label: pkg_code_freq_poly
#| code-fold: show
#| eval: false
#| echo: true
#| warning: false
#| message: false
#| results: hide
install.packages("palmerpenguins")
library(palmerpenguins) 
library(ggplot2)
```
:::



::: {style="font-size: 1.15em; color: #1e83c8;"}
**DATA:**
:::

::: {.column-margin}
![Artwork by allison horst](www/lter_penguins.png){fig-align="right" width="100%" height="100%"}
:::


The `penguins` data.

::: {style="font-size: 0.85em;"}
```{r}
#| label: data_code_freq_poly
#| code-fold: show
#| eval: true
#| echo: true
penguins <- palmerpenguins::penguins
glimpse(penguins)
```
:::
::::

## Grammar


::: {style="font-size: 1.15em; color: #1e83c8;"}
**CODE:**
:::

  -   Create labels with `labs()`

  -   Initialize the graph with `ggplot()` and provide `data`

  -   Map `flipper_length_mm` to the `x` and `species` to `group`  

  -   Map `species` to the `color` aesthetic *inside* the `geom_freqpoly()`


::: {style="font-size: 0.85em;"}
```{r}
#| label: code_graph_freq_poly
#| code-fold: show
#| eval: false
#| echo: true 
#| warning: false
#| message: false
#| out-height: '100%'
#| out-width: '100%'
labs_ovrlp_freq_poly <- labs(
  title = "Adult foraging penguins",
  x = "Flipper length (mm)",
  color = "Species")
ggp2_ovrlp_freq_poly <- ggplot(data = penguins, 
       aes(x = flipper_length_mm,
           group = species)) + 
  geom_freqpoly(aes(color = species))
ggp2_ovrlp_freq_poly + 
  labs_ovrlp_freq_poly
```
:::



::: {style="font-size: 1.15em; color: #1e83c8;"}
**GRAPH:**
:::

```{r}
#| label: create_graph_freq_poly
#| eval: true
#| echo: false
#| warning: false
#| message: false
#| out-height: '100%'
#| out-width: '100%'
#| layout-nrow: 1
#| column: page-inset-right
labs_ovrlp_freq_poly <- labs(
  title = "Adult foraging penguins",
  x = "Flipper length (mm)",
  color = "Species")
ggp2_ovrlp_freq_poly <- ggplot(data = penguins, 
       aes(x = flipper_length_mm,
           group = species)) + 
  geom_freqpoly(aes(color = species))
ggp2_ovrlp_freq_poly + 
  labs_ovrlp_freq_poly
```
