{
  "hash": "69bb3f33339fc41cfec41ed215cf6a45",
  "result": {
    "markdown": "# Instance chart {.unnumbered}\n\n\n\n\n\n::: {.callout-note appearance='simple' icon=false}\n***This graph should be readable but is currently undergoing final polishing.*** \n:::\n\n\n\n:::: {.callout-note collapse=\"false\" icon=false}\n\n::: {style=\"font-size: 1.25em; color: #02577A;\"}\nGraph info\n:::\n\n<br>\n\n\n::: {.cell layout-align=\"right\"}\n::: {.cell-output-display}\n![](instance_chart_files/figure-html/full_code_display-1.png){fig-align='right' width=60% height=60%}\n:::\n:::\n\n\n::: {style=\"font-size: 1.10em; color: #02577A;\"}\n**This graph requires:**\n:::\n\n::: {style=\"font-size: 1.05em; color: #282b2d;\"}\n**✅ a categorical variable**      \n:::\n\n::: {style=\"font-size: 1.05em; color: #282b2d;\"}\n**✅ a numeric (count) variable**\n:::\n\n::: {style=\"font-size: 1.05em; color: #282b2d;\"}\n**✅ a numeric (date) variable**\n:::\n\n::::\n\n## Description \n\n<!-- Description of graph aesthetics, appropriate use, similar graphs, etc.  -->\n\nAn instance chart (or instance graph) displays frequencies (or 'instances') of different categorical values over time time. \n\nThe time dimension is placed on the `x` and each\nseparate categorical item is placed on the `y`-axis. The instances are typically represented using the vertical hashes from `geom_point()` (i.e., shape `124` or the 'pipe' `\"|\"`). \n\nSaturation and color are also used to represent different categorical levels and counts. \n\n## Set up \n\n:::: {.panel-tabset}\n\n\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**PACKAGES:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nInstall packages.\n:::\n\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\ninstall.packages(\"babynames\")\nlibrary(babynames)\nlibrary(ggplot2)\n```\n:::\n\n:::\n\n\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**DATA:**\n:::\n\n::: {.column-margin}\n![](www/ssa.png){fig-align=\"center\" width=\"60%\" height=\"60%\"}\n:::\n\n<!-- \n::: {.column-margin}\n![Artwork by Allison Horst](www/lter_penguins.png){fig-align=\"right\" width=\"30%\" height=\"30%\"}\n![](www/538.png){fig-align=\"right\" width=\"15%\" height=\"15%\"}\n![](www/imdb.png){fig-align=\"right\" width=\"20%\" height=\"20%\"}\n:::\n-->\n\n\n\n::: {style=\"font-size: 0.85em;\"}\nFilter the `babynames::babynames` to only those names in `1887`, then group by `name` and `sex`, arrange descending by the `n`, and store only the top 6 names in `top_bby_nms_1887`. \n\nUse the names from `top_bby_nms_1887` to filter `babynames::babynames` for names *after* `1897` and store in `popular_bby_nms`. \n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nlibrary(babynames)\ntop_bby_nms_1887 <- babynames::babynames |> \n  dplyr::filter(year == 1887) |> \n  dplyr::group_by(name, sex) |> \n  dplyr::slice_max(order_by = sex) |> \n  dplyr::arrange(desc(n)) |> \n  utils::head(n = 6) |> \n  dplyr::ungroup()\ntop_bby_nms_1887\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"year\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sex\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"name\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"prop\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1887\",\"2\":\"F\",\"3\":\"Mary\",\"4\":\"9888\",\"5\":\"0.06362034\"},{\"1\":\"1887\",\"2\":\"M\",\"3\":\"John\",\"4\":\"8110\",\"5\":\"0.07419063\"},{\"1\":\"1887\",\"2\":\"M\",\"3\":\"William\",\"4\":\"7470\",\"5\":\"0.06833588\"},{\"1\":\"1887\",\"2\":\"M\",\"3\":\"James\",\"4\":\"4768\",\"5\":\"0.04361787\"},{\"1\":\"1887\",\"2\":\"M\",\"3\":\"George\",\"4\":\"4284\",\"5\":\"0.03919022\"},{\"1\":\"1887\",\"2\":\"F\",\"3\":\"Anna\",\"4\":\"4227\",\"5\":\"0.02719692\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code  code-fold=\"show\"}\npopular_bby_nms <- babynames::babynames |> \n  dplyr::filter(name %in% top_bby_nms_1887[['name']] & \n      year >= 1897)\n```\n:::\n\n:::\n::::\n\n## Grammar\n\n:::: {.panel-tabset}\n\n\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**CODE:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\n\nCreate labels with `labs()`\n\nInitialize the graph with `ggplot()` and provide `data`\n\nMap `year` to `x`, `name` to `y`, and `color` to `name`\n\nAdd `geom_point()`, map `n` to `alpha`, and set the `shape` to `124` and `size` to `5`\n\n\n\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nlabs_inst_pop_nms <- labs(\n  title = \"Popular names: then and now\",\n  subtitle = \"Most popular names from 1887 appearing between 1897 - 2017\",\n  x = \"Year\",\n  y = \"Name\")\nggp2_inst_pop_nms <- ggplot(data = popular_bby_nms, \n    mapping = aes(x = year, \n                  y = name, \n                  color = name)) + \n  geom_point(aes(alpha = n),\n              shape = 124,\n              size = 5)\nggp2_inst_pop_nms + \n  labs_inst_pop_nms\n```\n:::\n\n:::\n\n\n\n:::: {.column-margin}\n::: {style=\"font-size: 0.80em; color: #02577A;\"}\n<!-- More description of graph and code.  -->\n:::\n::::\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**GRAPH:**\n:::\n\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n::: {.cell-output-display}\n![](instance_chart_files/figure-html/create_graph_inst-1.png){width=100% height=100%}\n:::\n:::\n\n\n::::\n\n## More info\n\n:::: {.panel-tabset}\n\n### Saturation\n\n:::: {.column-margin}\n::: {style=\"font-size: 0.80em; color: #02577A;\"}\n`ggplot2::cut_interval()` \n:::\n::::\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**`ggplot2::cut_interval()`:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\n`ggplot2` has two great functions for splitting numerical variables into intervals or widths. We're going to create two datasets from `babynames::babynames` that capture the top names in `1900` and and the top names `2000`.\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntop_nms_prop_1900 <- babynames::babynames |>\n  dplyr::filter(year == 1900) |>\n  dplyr::group_by(sex, name) |> \n  dplyr::summarise(max_prop = max(prop)) |> \n  dplyr::slice_max(n = 2, order_by = max_prop) |>\n  dplyr::ungroup()\ntop_nms_prop_1900\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"sex\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"name\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"max_prop\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"F\",\"2\":\"Mary\",\"3\":\"0.05257559\"},{\"1\":\"F\",\"2\":\"Helen\",\"3\":\"0.01996211\"},{\"1\":\"M\",\"2\":\"John\",\"3\":\"0.06062307\"},{\"1\":\"M\",\"2\":\"William\",\"3\":\"0.05291335\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\ntop_nms_prop_2000 <- babynames::babynames |>\n  dplyr::filter(year == 2000) |>\n  dplyr::group_by(sex, name) |> \n  dplyr::summarise(max_prop = max(prop)) |> \n  dplyr::slice_max(n = 2, order_by = max_prop) |>\n  dplyr::ungroup()\ntop_nms_prop_2000\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"sex\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"name\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"max_prop\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"F\",\"2\":\"Emily\",\"3\":\"0.01300980\"},{\"1\":\"F\",\"2\":\"Hannah\",\"3\":\"0.01156961\"},{\"1\":\"M\",\"2\":\"Jacob\",\"3\":\"0.01651392\"},{\"1\":\"M\",\"2\":\"Michael\",\"3\":\"0.01534691\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n:::\n\n\n::: {style=\"font-size: 0.85em;\"}\nThese two tibbles tell us something about the top names over a century. The top names in 1900 have much higher proportions than the top names in 2000s.\n\nWe'll get the names from both tibbles and filter `babynames::babynames` to only these eight names between the years 1900 and 2000. \n\nWe'll create a `prop_range` variable, which splits the `prop` variable into intervals based on the `length` argument.\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nnms_1900 <- top_nms_prop_1900[[\"name\"]]\nnms_2000 <- top_nms_prop_2000[[\"name\"]]\n\ntop_nms_1900_2000 <- c(nms_1900, nms_2000)\n\npopular_bby_nms_prop <- babynames::babynames |>\n  dplyr::filter(name %in% top_nms_1900_2000 &\n                  year >= 1900 &\n                    year <= 2000) |>\n  dplyr::mutate(\n    # proportion range \n    prop_range = ggplot2::cut_interval(x = prop, \n                                       length = 0.025))\n```\n:::\n\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nBelow we can see the proportion ranges have been built with the [interval notation](https://ggplot2.tidyverse.org/reference/cut_interval.html): `\"(a,b]\"` \n\nWe can also see the proportion of names changes considerably between the two groups of names. \n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nlabs_inst_pop_nms_prop <- labs(\n  title = \"100 years of popular names\",\n  subtitle = \"Most popular names from 1900 and 2000\",\n  caption = \"*based on proportion\",\n  x = \"Year\",\n  y = \"Name\",\n  color = \"Proportion ranges\",\n  alpha = \"Proportion\")\nggp2_inst_pop_nms_prop <- ggplot(data = popular_bby_nms_prop, \n    mapping = aes(x = year, \n                  y = name, \n              color = prop_range)) + \n  geom_point(aes(alpha = prop),\n                shape = 124,\n                size = 2.5) \nggp2_inst_pop_nms_prop + \n  labs_inst_pop_nms_prop \n```\n\n::: {.cell-output-display}\n![](instance_chart_files/figure-html/more_info_color_inst-1.png){width=100% height=100%}\n:::\n:::\n\n\n:::\n\n### Facets \n\n:::: {.column-margin}\n::: {style=\"font-size: 0.80em; color: #02577A;\"}\n`ggplot2::cut_number()`\n:::\n::::\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**`ggplot2::cut_number()`:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nTo demonstrate facets, we'll create two other variables: `year_range` and `group`:   \n  - `year_range` uses `ggplot2::cut_number()` to create three groups based on the `year`, orders the results, and removes the labels. We manually assign the labels to this variable with `case_when()` and `factor()`    \n  - `group` is a factor variable with two levels: `1900 names` and `2000 names`   \n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code  code-fold=\"true\"}\npopular_bby_nms_fct <- popular_bby_nms_prop |>\n  dplyr::mutate(\n    # year range \n    year_range = ggplot2::cut_number(year, \n                                       n = 3, \n                                  labels = FALSE,\n                          ordered_result = TRUE),\n  year_range = case_when(\n    year_range == 1 ~ \"1900 - 1936\",\n    year_range == 2 ~ \"1937 - 1970\",\n    year_range == 3 ~ \"1971 - 2000\"),\n  year_range = factor(year_range,\n    levels = c(\"1900 - 1936\",\n               \"1937 - 1970\",\n               \"1971 - 2000\"),\n    ordered = TRUE),\n    group = case_when(\n      name %in% nms_1900 ~ \"1900 names\",\n      name %in% nms_2000 ~ \"2000 names\",\n      TRUE ~ NA_character_),\n    group = factor(group, \n      levels = c(\"1900 names\", \n                 \"2000 names\")))\n```\n:::\n\n:::\n\n\n::: {style=\"font-size: 0.85em;\"}\nBelow we can see the total counts of names in the cross-table of `year_range` and `group`:\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code  code-fold=\"true\"}\npopular_bby_nms_fct |> \n  dplyr::count(year_range, group) |> \n  tidyr::pivot_wider(names_from = group, \n    values_from = n)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"year_range\"],\"name\":[1],\"type\":[\"ord\"],\"align\":[\"right\"]},{\"label\":[\"1900 names\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"2000 names\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1900 - 1936\",\"2\":\"280\",\"3\":\"191\"},{\"1\":\"1937 - 1970\",\"2\":\"280\",\"3\":\"190\"},{\"1\":\"1971 - 2000\",\"2\":\"235\",\"3\":\"236\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n:::\n\n\n::: {style=\"font-size: 0.85em;\"}\nIn the graph, we'll create labels using the `levels` from the `year_range` variable. \n\nWe can also change the `shape` used in `geom_point()` to the pipe operator (`\"|\"`).\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code  code-fold=\"true\"}\n# create labels from factor levels \nst_lbls <- paste0(\n              levels(popular_bby_nms_fct$year_range),\n            collapse = \", \")\n\nlabs_inst_pop_nms_facet <- labs(\n  title = \"Baby name popularity over time\",\n  subtitle = paste0(\"Time span: \", st_lbls),\n  x = \"Year\",\n  y = \"Name\")\n\nggp2_inst_pop_nms_facet <- ggplot(popular_bby_nms_fct,\n  mapping = aes(x = year,\n                y = name)) +\n  geom_point(aes(alpha = prop, color = name),\n                 shape = \"|\",\n                 size = 3,\n                 show.legend = FALSE) +\n  facet_wrap(year_range ~ group,\n             scales = \"free_y\", \n             ncol = 2)\nggp2_inst_pop_nms_facet +\n  labs_inst_pop_nms_facet\n```\n\n::: {.cell-output-display}\n![](instance_chart_files/figure-html/bby_nms_facet_inst-1.png){width=100% height=100%}\n:::\n:::\n\n:::\n\n::: {style=\"font-size: 0.85em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n:::\n\n:::\n\n\n\n::::\n",
    "supporting": [
      "instance_chart_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}