{
  "hash": "5ee91f7cb5fc7e781e1ace545afaeb77",
  "result": {
    "markdown": "# Hexagon bins {.unnumbered}\n\n\n\n\n\n::: {.callout-tip appearance='simple' icon=false}\n***This graph is largely complete and just needs final proof reading.*** \n:::\n\n\n:::: {.callout-note collapse=\"false\" icon=false}\n\n::: {style=\"font-size: 1.25em; color: #02577A;\"}\nGraph info\n:::\n\n<br>\n\n\n::: {.cell layout-align=\"right\"}\n::: {.cell-output-display}\n![](hex_bins_files/figure-html/full_code_display-1.png){fig-align='right' width=60% height=60%}\n:::\n:::\n\n\n::: {style=\"font-size: 1.10em; color: #02577A;\"}\n**This graph requires:**\n:::\n\n::: {style=\"font-size: 1.05em; color: #282b2d;\"}\n**✅ two numeric (continuous) variable**\n:::\n\n::::\n\n## Description \n\nHexagon bins (or hex-bins) are a very similar to 2-D histograms, but instead of dividing the graph area into a grid, it's divided into hexagons. The number of points inside each per hexagon determine it's color. \n\n\n## Set up\n\n:::: {.panel-tabset}\n\n\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**PACKAGES:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nInstall packages.\n:::\n\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n```\n:::\n\n:::\n\n\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**DATA:**\n:::\n\n::: {.column-margin}\n![Artwork by allison horst](www/lter_penguins.png){fig-align=\"right\" width=\"100%\" height=\"100%\"}\n:::\n\n\n::: {style=\"font-size: 0.85em;\"}\nWe'll take the `flipper_length_mm`, `bill_length_mm`, `bill_depth_mm`, `species`, `sex`, and `island` variables from `palmerpenguins::penguins` and drop the missing values. \n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\npenguins_hex <- palmerpenguins::penguins |> \n    dplyr::select(flipper_length_mm, bill_depth_mm,\n        bill_length_mm, species, sex, island) |> \n    tidyr::drop_na()\nglimpse(penguins_hex)\n#> Rows: 333\n#> Columns: 6\n#> $ flipper_length_mm <int> 181, 186, 195, 193, 190, 181, 19…\n#> $ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, 19.3, 20.6, 17…\n#> $ bill_length_mm    <dbl> 39.1, 39.5, 40.3, 36.7, 39.3, 38…\n#> $ species           <fct> Adelie, Adelie, Adelie, Adelie, …\n#> $ sex               <fct> male, female, female, female, ma…\n#> $ island            <fct> Torgersen, Torgersen, Torgersen,…\n```\n:::\n\n:::\n::::\n\n## Grammar\n\n:::: {.panel-tabset}\n\n\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**CODE:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\n\nCreate labels with `labs()`\n\nInitialize the graph with `ggplot()` and provide `data`\n\nMap `bill_length_mm` to the `x` and `flipper_length_mm` to the `y`\n\nAdd the `geom_hex()` layer\n\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nlabs_hex <- labs(\n    title = \"Adult Foraging Penguins\", \n    subtitle = \"Near Palmer Station, Antarctica\", \n    x = \"Bill length (mm)\", \n    y = \"Flipper length (mm)\")\n# graph\nggp2_hex <- ggplot(data = penguins_hex, \n    aes(x = bill_length_mm, y = flipper_length_mm)) + \n    geom_hex()\n\nggp2_hex + \n    labs_hex\n```\n:::\n\n:::\n\n\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**GRAPH:**\n:::\n\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n::: {.cell-output-display}\n![](hex_bins_files/figure-html/create_graph_hex-1.png){width=100% height=100%}\n:::\n:::\n\n\n::::\n\n## More info\n\n:::: {.panel-tabset}\n\n### Bins\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**BINS:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nBelow we change the `bins` to `20` and `15` and save these layers as `ggp2_hex_b20` and `ggp2_hex_b15`.\n\n*Decreasing* the number of `bins` *increases* the size of the hexagons (and makes them larger). \n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code}\nggp2_hex_b20 <- ggplot(data = penguins_hex,\n    aes(x = bill_length_mm, y = flipper_length_mm)) +\n    geom_hex(bins = 20)\nggp2_hex_b20 +\n    labs_hex\n\n\nggp2_hex_b15 <- ggplot(data = penguins_hex,\n    aes(x = bill_length_mm, y = flipper_length_mm)) +\n    geom_hex(bins = 15)\nggp2_hex_b15 +\n    labs_hex\n```\n\n::: {.cell-output-display}\n![](hex_bins_files/figure-html/bins_hex-1.png){width=100% height=100%}\n:::\n\n::: {.cell-output-display}\n![](hex_bins_files/figure-html/bins_hex-2.png){width=100% height=100%}\n:::\n:::\n\n\n:::\n\n### Scale\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**SCALES:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nWe can adjust the color scale using  `scale_color_discrete_sequential()` and setting `aesthetics` to `\"fill\"`. \n\nIf the hexagons overlap, we can use the `alpha` to make them slightly transparent. \n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code}\nlabs_hex2 <- labs(\n    title = \"Adult Foraging Penguins\", \n    subtitle = \"Near Palmer Station, Antarctica\", \n    x = \"Bill length (mm)\", \n    y = \"Flipper length (mm)\",\n    fill = \"Sex\")\nggplot(data = penguins_hex, \n    aes(x = bill_length_mm, \n        y = flipper_length_mm)) + \n    geom_hex(aes(fill = sex), \n             bins = 15, \n             alpha = 3/4) + \n    scale_color_discrete_sequential(\n        aesthetics = \"fill\", \n        rev = FALSE,\n        palette = \"Viridis\") +\n    labs_hex2\n```\n\n::: {.cell-output-display}\n![](hex_bins_files/figure-html/scales_2d_hex-1.png){width=100% height=100%}\n:::\n:::\n\n\n::: {style=\"font-size: 0.85em;\"}\nGet a full list of available color palette's using `hcl_palettes(type = ` `\"sequential\")`\n:::\n\n:::\n\n### Options\n\n::: {style=\"font-size: 1.15em; color: #1e83c8;\"}\n**OPTIONS:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\n\n`binwidth` allows us to manually adjust the size of the hexagons.\n\n`linewidth` is also helpful when using `alpha` for overlapping values. \n\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code}\nlabs_hex3 <- labs(\n    title = \"Adult Foraging Penguins\", \n    subtitle = \"Near Palmer Station, Antarctica\", \n    x = \"Bill length (mm)\", \n    y = \"Flipper length (mm)\",\n    fill = \"Species\")\n\nggplot(data = penguins_hex, \n    aes(x = bill_length_mm, \n        y = flipper_length_mm, \n        fill = species)) + \n    geom_hex(binwidth = c(1.1, 3),\n        linewidth = 0.5, \n        alpha = 3/4,\n        color = \"#000000\") + \n    scale_color_discrete_sequential(\n        aesthetics = \"fill\", \n        palette = \"Dark Mint\") +\n    labs_hex3\n```\n\n::: {.cell-output-display}\n![](hex_bins_files/figure-html/pals_2d_hex-1.png){width=100% height=100%}\n:::\n:::\n\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nBins can be set with `bins` (a single number) or `binwidth` (a numeric vector of `c(x, y)`)\n:::\n\n::::\n",
    "supporting": [
      "hex_bins_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}