{
  "hash": "6abed64a13a53164e656366cba0379ae",
  "result": {
    "markdown": "# Bar graphs {#sec-bar-graphs}\n\n\n\n\n\n\n:::: {.callout-note collapse=\"false\" icon=false}\n\n::: {style=\"font-size: 1.25em; color: #02577A;\"}\nBar graphs require:\n:::\n\n::: {style=\"font-size: 1.05em; color: #282b2d;\"}\n**✅ a categorical variable**      \n:::\n\n<br>\n\n\n::: {.cell layout-align=\"right\"}\n::: {.cell-output-display}\n![](bar_graphs_files/figure-html/full_code_display-1.png){fig-align='right' width=60% height=60%}\n:::\n:::\n\n\n::::\n\n## Description\n\nA bar graph (or bar chart) is typically used to display counts for the discrete levels of a categorical variable, like political affiliation, hair color, or race/ethnicity (or species of penguin!). \n\nBar graphs can be arranged vertically or horizontally, but the length of the bar represents the ‘count’ for each category value. \n\nIn `ggplot2`, bar graphs can be built using `geom_bar()` (see also: [`geom_col()`](https://mjfrigaard.github.io/ggp2-gallery/geoms/geom_col.html)).\n\n## Set up \n\n::: {style=\"font-size: 1.10em; color: #1e83c8;\"}\n**PACKAGES:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nInstall packages.\n:::\n\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n```\n:::\n\n:::\n\n::: {style=\"font-size: 1.10em; color: #1e83c8;\"}\n**DATA:**\n:::\n\n::: {.column-margin}\n![Artwork by Allison Horst](www/lter_penguins.png){fig-align=\"right\" width=\"100%\" height=\"100%\"}\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nFilter the missing values from `species` in the `palmerpenguins::penguins` data and store it in `penguins_bar`.\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\npenguins_bar <- palmerpenguins::penguins |> \n    dplyr::filter(!is.na(species))\nglimpse(penguins_bar)\n#> Rows: 344\n#> Columns: 8\n#> $ species           <fct> Adelie, Adelie, Adelie, Adelie, …\n#> $ island            <fct> Torgersen, Torgersen, Torgersen,…\n#> $ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3…\n#> $ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6…\n#> $ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181…\n#> $ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650…\n#> $ sex               <fct> male, female, female, NA, female…\n#> $ year              <int> 2007, 2007, 2007, 2007, 2007, 20…\n```\n:::\n\n:::\n\n## Grammar\n\n::: {style=\"font-size: 1.10em; color: #1e83c8;\"}\n**CODE:**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\n\nCreate labels with `labs()` \n\nInitialize the graph with `ggplot()` and provide `data`\n\nMap `species` to the `x` axis\n\nMap `species` to the `fill` aesthetic inside the `aes()` of `geom_bar()`\n\nRemove the legend with `show.legend = FALSE`\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nlabs_bar <- labs(\n  title = \"Adult foraging penguins\",\n  subtitle = \"Distribution of flipper length\",\n  x = \"Species\", y = \"Count\", \n  fill = \"Species\")\nggp2_bar <- ggplot(data = penguins_bar,\n       aes(x = species)) +\n    geom_bar(aes(fill = species), \n        show.legend = FALSE)\nggp2_bar +\n  labs_bar\n```\n:::\n\n:::\n\n\n\n::: {style=\"font-size: 1.10em; color: #1e83c8;\"}\n**GRAPH:**\n:::\n\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n::: {.cell-output-display}\n![](bar_graphs_files/figure-html/create_graph_bar-1.png){width=100% height=100%}\n:::\n:::\n\n\n\n\n## More info\n\n- The connection between statistical transformations and geoms is an important principle for building graphs (and mastering the grammar) with `ggplot2`\n    - Below we cover why `geom_bar(stat = \"count\")` produces the same result as `stat_count(geom = \"bar\")`\n\n::: {.column-margin}\n\"*every geom has a default stat, and every stat a default geom.*\" - [`ggplot2` book](https://ggplot2-book.org/layers.html#layers)\n:::\n\n\n- Bar graphs can also be created with `geom_col()`\n\n### stats and geoms\n\n::: {style=\"font-size: 1.10em; color: #1e83c8;\"}\n**stat_count():**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nThe default `stat` argument in `geom_bar()` is set to `\"count\"`, which '*counts the number of cases at each `x` position*', so it's ideal for categorical variables (or factors). \n\nThe `stat_count()` function can also be used to create bar graphs using the `geom` argument.  \n\nThe link between `geom_`**geom_name**`(stat = \"`**stat_name**`\")` and `stat_`**stat_name**`(geom = \"`**geom_name**`\")` is shown below:\n:::\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code}\nggp2_geom_bar <- ggplot(data = penguins_bar,\n       aes(x = species)) +\n    geom_bar(aes(fill = species), \n        stat = \"count\") + \n    labs(title = \"geom_bar(stat = 'count')\")\nggp2_geom_bar\n\n\nggp2_stat_count <- ggplot(data = penguins_bar,\n       aes(x = species)) +\n    stat_count(aes(fill = species), \n        geom = \"bar\") + \n    labs(title = \"stat_count(geom = 'bar')\")\nggp2_stat_count\n```\n\n::: {.cell-output-display}\n![](bar_graphs_files/figure-html/stat_vs_geom_bar-1.png){width=100% height=100%}\n:::\n\n::: {.cell-output-display}\n![](bar_graphs_files/figure-html/stat_vs_geom_bar-2.png){width=100% height=100%}\n:::\n:::\n\n:::\n\n\n### `geom_col()`\n\n::: {style=\"font-size: 1.10em; color: #1e83c8;\"}\n**geom_col():**\n:::\n\n::: {style=\"font-size: 0.85em;\"}\nTo create a bar graph with `geom_col()`, the `count` variable needs to be computed before being mapped into the graph `y` aesthetic. \n:::\n\n\n::: {style=\"font-size: 0.75em;\"}\n\n::: {.cell .column-page-inset-right layout-nrow=\"1\"}\n\n```{.r .cell-code}\npenguins_bar |> \n    # create column of counts \n    dplyr::count(species, name = \"count\") |> \n    # map into x and y\n    ggplot(mapping = aes(x = species, y = count)) +\n    geom_col(aes(fill = species), \n        show.legend = FALSE) + \n    labs_bar +\n    labs(caption = \"*geom_col()\")\n    \n\n# compare to geom_bar()\nggp2_bar +\n  labs_bar\n```\n\n::: {.cell-output-display}\n![](bar_graphs_files/figure-html/bar_with_geom_col-1.png){width=100% height=100%}\n:::\n\n::: {.cell-output-display}\n![](bar_graphs_files/figure-html/bar_with_geom_col-2.png){width=100% height=100%}\n:::\n:::\n\n:::\n\n",
    "supporting": [
      "bar_graphs_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}