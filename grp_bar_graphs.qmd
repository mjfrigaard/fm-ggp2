# Grouped bar graphs {#sec-grp-bar-graphs}


```{r}
#| label: setup
#| message: false
#| warning: false
#| include: false
library(tidyverse)
library(lubridate)
library(scales)
library(knitr)
library(kableExtra)
library(colorblindr)
library(downlit)
# fonts ----
library(extrafont)
library(sysfonts)
source("_common.R")
# use font
showtext::showtext_auto()
# set theme
ggplot2::theme_set(theme_ggp2g(
    base_size = 15))
```

```{r}
#| label: status
#| results: "asis"
#| echo: false
# status ----
# polishing, restructuring, drafting, complete
status("complete")
```


:::: {.callout-note collapse="false" icon=false}

::: {style="font-size: 1.10em; color: #02577A;"}
**This graph requires:**
:::

::: {style="font-size: 1.05em; color: #282b2d;"}
**`r emo::ji("check")` a categorical variable**      
:::

::: {style="font-size: 1.05em; color: #282b2d;"}
**`r emo::ji("check")` a numeric (continuous) variable**
:::

<br>

```{r}
#| label: full_code_display
#| eval: true
#| echo: false
#| warning: false
#| message: false
#| out-height: '60%'
#| out-width: '60%'
#| fig-align: right
library(palmerpenguins) 
library(ggplot2)
peng_grp_col <- palmerpenguins::penguins |>
    dplyr::select(body_mass_g, island) |> 
    tidyr::drop_na() |> 
    dplyr::group_by(island) |>
    dplyr::summarise(
        sum_body_mass_g = sum(body_mass_g)
        ) |>
    dplyr::ungroup()
# glimpse(peng_grp_col)
labs_grp_col <- labs(
    title = "Total Penguin Mass",
    subtitle = "What's the total mass of penguins per Island?",
    x = "Island",
    y = "Total penguin body mass (g)")
ggp2_grp_col <- ggplot(data = peng_grp_col,
              aes(x = island, 
                  y = sum_body_mass_g)) + 
        geom_col(aes(fill = island),
            show.legend = FALSE)
ggp2_grp_col + 
    labs_grp_col
```

::::

## Description 

Grouped bar graphs compare multiple values across categories. Each category has a cluster of bars. X-axis labels show categories and y-axis values. Colors or patterns differentiate subsets, and a legend is shown on the side or top of the graph.

`geom_col()` allows us to display 'grouped' numerical values across levels (or groups) of a categorical variable. 

## Set up

::: {style="font-size: 1.10em; color: #1e83c8;"}
**PACKAGES:**
:::

Install packages.

::: {style="font-size: 0.85em;"}
```{r}
#| label: pkg_code_grp_col
#| code-fold: show
#| eval: false
#| echo: true
#| warning: false
#| message: false
#| results: hide
install.packages("palmerpenguins")
library(palmerpenguins) 
library(ggplot2)
```
:::



::: {style="font-size: 1.10em; color: #1e83c8;"}
**DATA:**
:::

::: {.column-margin}
![Artwork by Allison Horst](www/lter_penguins.png){fig-align="right" width="100%" height="100%"}
:::

Remove the missing values and reduce the `palmerpenguins::penguins` dataset to only `body_mass_g` and `island`, then group the data by `island` and calculate the sum of `body_mass_g` (as `sum_body_mass_g`). 

::: {style="font-size: 0.85em;"}
```{r}
#| label: data_code_grp_col
#| code-fold: show
#| eval: true
#| echo: true
peng_grp_col <- palmerpenguins::penguins |>
    dplyr::select(body_mass_g, island) |> 
    tidyr::drop_na() |> 
    dplyr::group_by(island) |>
    dplyr::summarise(
        sum_body_mass_g = sum(body_mass_g)
        ) |>
    dplyr::ungroup()
glimpse(peng_grp_col)
```
:::


## Grammar

::: {style="font-size: 1.10em; color: #1e83c8;"}
**CODE:**
:::

Grouped bar graphs assume the statistical measure (i.e., the value that the length of the bars will be derived from) is contained in a variable and mapped to the `x` or `y` aesthetic. 

  -   Create labels with `labs()`

  -   Initialize the graph with `ggplot()` and provide `data`

  -   Map `island` to the `x` and `sum_body_mass_g` to the `y`

  -   Map `island` to `fill` *inside* the `aes()` of `geom_col()` 

::: {style="font-size: 0.85em;"}
```{r}
#| label: code_graph_grp_col
#| code-fold: show
#| eval: false
#| echo: true 
#| warning: false
#| message: false
#| out-height: '100%'
#| out-width: '100%'
labs_grp_col <- labs(
    title = "Total Penguin Mass",
    subtitle = "What's the total mass of penguins per Island?",
    x = "Island",
    y = "Total penguin body mass (g)")
ggp2_grp_col <- ggplot(data = peng_grp_col,
              aes(x = island, 
                  y = sum_body_mass_g)) + 
        geom_col(aes(fill = island),
            show.legend = FALSE)
ggp2_grp_col + 
    labs_grp_col
```
:::

::: {style="font-size: 1.10em; color: #1e83c8;"}
**GRAPH:**
:::

```{r}
#| label: create_graph_grp_col
#| eval: true
#| echo: false
#| warning: false
#| message: false
#| out-height: '100%'
#| out-width: '100%'
#| layout-nrow: 1
#| column: page-inset-right
labs_grp_col <- labs(
    title = "Total Penguin Mass",
    subtitle = "What's the total mass of penguins per Island?",
    x = "Island",
    y = "Total penguin body mass (g)")
ggp2_grp_col <- ggplot(data = peng_grp_col,
              aes(x = island, 
                  y = sum_body_mass_g)) + 
        geom_col(aes(fill = island),
            show.legend = FALSE)
ggp2_grp_col + 
    labs_grp_col
```


## More Info

We didn't have to calculate `sum_body_mass_g` (displayed on the `y` axis) by `island` because `ggplot2` does this for us!

If we pass a categorical variable to the `x` (like `island`) and a continuous variable to `y` (like `body_mass_kg`), `geom_col()` will calculate the `sum()` of `y` by levels of `x`:

::: {style="font-size: 0.85em;"}
```{r}
#| label: create_summary_sum_col_graph
#| eval: true
#| echo: true
#| warning: false
#| message: false
  penguins |> 
  dplyr::select(body_mass_g, island) |> 
  tidyr::drop_na() |>
  ggplot(aes(x = island, y = body_mass_g)) + 
        geom_col(aes(fill = island),
            show.legend = FALSE) + 
  labs_grp_col
```
:::


We can see the underlying totaling of `body_mass_g` using `dplyr`â€™s `group_by()` and `summarise()` functions.

::: {style="font-size: 0.85em;"}
```{r}
#| label: create_summary_sum_col
#| eval: false
#| echo: true
#| warning: false
#| message: false
palmerpenguins::penguins |> 
    dplyr::select(body_mass_g, island) |> 
    tidyr::drop_na() |> 
    dplyr::group_by(island) |>
    dplyr::summarise(
        `Total Penguin Body Mass (kg)` = sum(body_mass_g)
        ) |>
    dplyr::ungroup() |> 
    dplyr::select(`Island` = island, 
        `Total Penguin Body Mass (kg)`)
```
:::

::: {style="font-size: 0.85em;"}
```{r}
#| label: show_summary_sum_col
#| eval: true
#| echo: false
#| warning: false
#| message: false
#| layout-nrow: 1
#| column: page-inset-right
palmerpenguins::penguins |> 
    dplyr::select(body_mass_g, island) |> 
    tidyr::drop_na() |> 
    # divide the mass value by 1000
    dplyr::mutate(
        body_mass_kg = body_mass_g / 1000
    ) |> 
    dplyr::group_by(island) |>
    dplyr::summarise(
       `Total Penguin Body Mass (kg)` = sum(body_mass_kg)) |>
    dplyr::ungroup() |> 
    dplyr::select(`Island` = island, 
        `Total Penguin Body Mass (kg)`) |> 
    knitr::kable() |> 
    kableExtra::kable_minimal()
```
:::