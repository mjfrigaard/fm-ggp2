# Introduction {.unnumbered}


```{r}
#| label: setup
#| message: false
#| warning: false
#| include: false
library(tidyverse)
library(lubridate)
library(scales)
library(knitr)
library(kableExtra)
library(colorblindr)
library(downlit)
# _common.R ----
source("_common.R")
# use font
showtext::showtext_auto()
# set theme
ggplot2::theme_set(theme_ggp2g(
    base_size = 15))
```

```{r}
#| label: co_box_dev
#| echo: false
#| results: asis
#| eval: true
co_box(
  color = "o", look = "minimal",
  header = "Caution",
  contents = "This section is still being developed. The contents are subject to change.",
  fold = FALSE
)
library(dplyr)
library()
```

## Graph Categories 

Graphs have been categorized into the following types (you can see them in the floating table of contents to your left).

- **Univariate**: if you have a single column you're trying to visualize 

- **Amounts**: counts or simple summary statistics of one or two columns in a dataset     

- **Proportions**: ratio displays of part-to-whole    

- **Distributions**: displaying the shape of a variable's values (normalcy, skewness, kurtosis, etc.)    

- **Dates & Times**: changes in quantitative or categorical variables over a dimension of time (date-time, date, year, month, quarter, etc.).

- **Relationships**: how does the change of values in variable `x` affect the values in variable `y` (and possibly `z`)?   

Some graphs can justifiably belong to more than one category, and wherever this is the case, I've tried to include links to other applications in the notes.

## Style & structure

Each graph has, at minimum, the following sections: 

1. ****  
   - *Should I use this graph?*  
   - *This graph requires:*  
2. **Description**     
3. **Set up**
   - *Packages and Data*   
     - Code for installing development version of packages (if necessary) for graphs *and* data   
     - Any steps used to create (i.e., manipulate and prepare) the data for the graph    
2. **The grammar**    
   - *Code to build the labels and graph layers*      
     - Graph labels have the `labs_` prefix     
     - Graph layers have a `ggp2_` prefix   
3. **More info**  
   - *Additional methods, arguments, or applications*      
     - Color palettes  
     - Complimentary packages  


I've attempted to balance brevity and clarity, but with the assumption that its best to err on the latter. I've also followed the general principle that if a graph can be *easily* built using one of `ggplot2` 's `geom_*` functions, that method is shown first. 

I've attempted to write code for each graph so that is can be read and understood *without* having to execute it.[^rule-of-least-power]

[^rule-of-least-power]: This field manual follows a [Rule of Least Power Principle](https://www.w3.org/2001/tag/doc/leastPower.html), in the sense that "*a language with a straightforward syntax may be easier to analyze than an otherwise equivalent one with more complex structure.*"
  
  
## The Data 

The data packages used are available to preview below. 

```{r}
#| eval: false
#| echo: true
#| code-fold: show
data_pkgs <- c("palmerpenguins", 
               "fivethirtyeight", 
               "ggplot2movies", 
               "babynames")
install.packages(data_pkgs)
```


### `palmerpenguins::penguins`

The majority of the graphs in the manual are built using the `palmerpenguins::penguins` data. 

:::: {.column-margin}

::: {style="font-size: 0.95em; color: #282b2d;"}
***...so...many...PENGUINS!***
:::

![Artwork by allison_horst](www/lter_penguins.png){fig-align="center" width="50%" height="50%"}
::::

:::: {.callout-note collapse="true" icon=false}
## Expand to view the data in `palmerpenguins::penguins`

::: {style="font-size: 0.85em;"}
```{r}
#| label: paged_penguins
#| eval: true
#| echo: false
rmarkdown::paged_table(palmerpenguins::penguins)
```
:::

::::

Source: [https://github.com/allisonhorst/palmerpenguins/](https://github.com/allisonhorst/palmerpenguins/)

### `fivethirtyeight`

Use the table below to view the datasets in this package. 

::: {.column-margin}
![](www/538.png){fig-align="center" width="30%" height="30%"}
:::

:::: {.callout-note collapse="true" icon=false}
## Expand to view the data in the `fivethirtyeight` package

::: {style="font-size: 0.85em;"}
*To view a table of available datasets in the `fivethirtyeight` package, view the `Data Frame Name` and `Article Title` columns in the `datasets_master` table*
:::

::: {style="font-size: 0.80em;"}
```{r}
#| label: fivethirtyeight_pkg
#| eval: true
#| echo: false
#| message: false
#| warning: false
library(fivethirtyeight)
rmarkdown::paged_table(fivethirtyeight::datasets_master |> 
    select(`Data Frame Name`, `Article Title`))
```
:::
::::

Source: [https://github.com/fivethirtyeight/data](https://github.com/fivethirtyeight/data)

### `ggplot2movies::movies`

::: {.column-margin}
![](www/imdb.png){fig-align="center" width="30%" height="30%"}
:::

:::: {.callout-note collapse="true" icon=false}
## Expand to view *a sample* of the data in `ggplot2movies::movies`

::: {style="font-size: 0.85em;"}
```{r}
#| label: paged_ggplot2movies
#| eval: true
#| echo: false
rmarkdown::paged_table(x = 
    dplyr::slice_sample(ggplot2movies::movies, 
      n = 1000, replace = FALSE))
```
:::

::::

Source: [https://www.imdb.com/](https://www.imdb.com/)

### `babynames::babynames`

::: {.column-margin}
![](www/ssa.png){fig-align="center" width="40%" height="40%"}
:::

:::: {.callout-note collapse="true" icon=false}
## Expand to view *a sample* of the data in `babynames::babynames`

::: {style="font-size: 0.85em;"}
```{r}
#| label: paged_babynames
#| eval: true
#| echo: false
rmarkdown::paged_table(x = 
    dplyr::slice_sample(babynames::babynames, 
      n = 1000, replace = FALSE))
```
:::
::::

Source: [http://www.ssa.gov/oact/babynames/limits.html](http://www.ssa.gov/oact/babynames/limits.html)

***Why not manually create the graph datasets with `data.frame()` or `tibble()`/`tribble()`?*** 

In my opinion, using manually generated data is great for reproducible examples, but they rarely look like data 'caught in the wild.' The data packages above are also well maintained and can be used to provide a variety of examples.

## Assumptions 

The code and examples assume the reader has already answered the question, “*what kind of data do I have?*” 

If not, I highly recommend the [`skimr`](https://docs.ropensci.org/skimr/) and [`inspectdf`](https://alastairrushworth.github.io/inspectdf/) packages for getting to know your data better.


## Theme

The theme used in the graphs is custom and uses combined elements from `ggplot2::theme_minimal()` and `ggplot2::theme_void()`. View it [here](https://github.com/mjfrigaard/fm-ggp2/blob/main/R/theme_ggp2g.R).

