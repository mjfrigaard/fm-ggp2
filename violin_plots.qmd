# Violin plots {#sec-violin-plots}

```{r}
#| label: setup
#| message: false
#| warning: false
#| include: false
library(tidyverse)
library(lubridate)
library(scales)
library(knitr)
library(kableExtra)
library(colorblindr)
library(downlit)
# fonts ----
library(extrafont)
library(sysfonts)
source("_common.R")
# use font
showtext::showtext_auto()
# set theme
ggplot2::theme_set(theme_ggp2g(
    base_size = 15))
```

```{r}
#| label: status
#| results: "asis"
#| echo: false
# status ----
# polishing, restructuring, drafting, complete
status("complete")
```

:::: {.callout-note collapse="false" icon=false}

::: {style="font-size: 1.10em; color: #02577A;"}
**This graph requires:**
:::

::: {style="font-size: 1.05em; color: #282b2d;"}
**`r emo::ji("check")` a numeric (continuous) variable**
:::

<br>

```{r}
#| label: full_code_display
#| eval: true
#| echo: false
#| warning: false
#| message: false
#| out-height: '60%'
#| out-width: '60%'
#| fig-align: right
library(palmerpenguins) 
library(ggplot2)
labs_violin <- labs(
  title = "Adult foraging penguins",
  subtitle = "Distribution of flipper length",
  x = "",
  y = "Flipper length (millimeters)")
ggp2_violin <- ggplot(data = penguins,
       aes(x = '', 
           y = flipper_length_mm)) +
       geom_violin() 
ggp2_violin + 
  labs_violin
```

::::

## Description

Violin plots show data distribution and probability density. They are like box plots but have a rotated kernel density plot on each side. We can use them to compare data distribution across categories.

::: {.column-margin}

The violin plot is essentially a mirrored density plot, in which a smoothed distribution is plotted symmetrically across the `x` or `y` axis, creating a Rorschach-like inkblot area for the distribution:

![source: Rorschach test, Wikipedia](https://upload.wikimedia.org/wikipedia/commons/7/70/Rorschach_blot_01.jpg){fig-align="right" width="100%" height="100%"}
:::

## Set up

::: {style="font-size: 1.10em; color: #1e83c8;"}
**PACKAGES:**
:::

::: {style="font-size: 0.95rem;"}
Install packages.
:::


::: {style="font-size: 0.85em;"}
```{r}
#| label: pkg_code_violin
#| code-fold: show
#| eval: false
#| echo: true
#| warning: false
#| message: false
#| results: hide
install.packages("palmerpenguins")
library(palmerpenguins)
library(ggplot2)
```
:::



::: {style="font-size: 1.10em; color: #1e83c8;"}
**DATA:**
:::

::: {.column-margin}
![Artwork by Allison Horst](www/lter_penguins.png){fig-align="right" width="100%" height="100%"}
:::

::: {style="font-size: 0.95rem;"}
The `penguins` data.
:::

::: {style="font-size: 0.85em;"}
```{r}
#| label: data_code_violin
#| code-fold: show
#| eval: true
#| echo: true
penguins <- palmerpenguins::penguins
glimpse(penguins)
```
:::


## Grammar 

::: {style="font-size: 1.10em; color: #1e83c8;"}
**CODE:**
:::

::: {style="font-size: 0.95rem;"}

Create labels with `labs()`

Initialize the graph with `ggplot()` and provide `data`

  - Place an empty string (`""`) in the `x` argument

Map and empty string (`""`) to the `x` and `flipper_length_mm` to the `y`

Add `geom_violin()`

:::

::: {style="font-size: 0.85em;"}
```{r}
#| label: code_graph_violin
#| code-fold: show
#| eval: false
#| echo: true 
#| warning: false
#| message: false
labs_violin <- labs(
  title = "Adult foraging penguins",
  subtitle = "Distribution of flipper length",
  x = "",
  y = "Flipper length (millimeters)")
ggp2_violin <- ggplot(data = penguins,
       aes(x = '', 
           y = flipper_length_mm)) +
       geom_violin() 
ggp2_violin + 
  labs_violin
```
:::



::: {style="font-size: 1.10em; color: #1e83c8;"}
**GRAPH:**
:::

```{r}
#| label: create_graph_violin
#| eval: true
#| echo: false
#| warning: false
#| message: false
#| out-height: '100%'
#| out-width: '100%'
#| layout-nrow: 1
#| column: page-inset-right
labs_violin <- labs(
  title = "Adult foraging penguins",
  subtitle = "Distribution of flipper length",
  x = "",
  y = "Flipper length (millimeters)")
ggp2_violin <- ggplot(data = penguins,
       aes(x = '', 
           y = flipper_length_mm)) +
       geom_violin() 
ggp2_violin + 
  labs_violin
```

